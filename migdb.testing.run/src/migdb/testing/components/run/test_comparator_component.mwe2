module migb.testing.run.test_comparator_component_1

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.mwe.*


import org.eclipse.xtext.mwe.SlotEntry
import org.eclipse.xtext.mwe.ResourceLoadingSlotEntry
import org.eclipse.xtext.mwe.Validator
import org.eclipse.xtext.mwe.NameBasedFilter

import org.eclipse.emf.mwe.utils.Writer
import org.eclipse.emf.mwe.utils.Reader

import eu.collectionspro.mwe.*
import migdb.generator.*

var OUTPUT_DIR = "output-tests/test_comparator_component/1-same/"
var TEST_PREFIX_DIR = "../migdb.qvto/transforms/tests/validator_app/"

/**
 * Test of the ComparatorComponent. Test is succesful - eg, models are same.
 */
Workflow{
	component = org.eclipse.emf.mwe.utils.DirectoryCleaner {
		directory = "${OUTPUT_DIR}"
	}
	
		
	/* Define of APP metamodel */
	bean=org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri=".."
		registerGeneratedEPackage = "mm.app.AppPackage"
	}
		
	/*Create compared file */
	component = QVTOExecutor {
		transformationFile = "${TEST_PREFIX_DIR}/test_app_01.qvto"
		outputSlot = "experimental"
	}
	
	/* write result */
	component = Writer {
		modelSlot = "experimental"
		uri = "${OUTPUT_DIR}/expected_result_1.xmi"
		cloneSlotContents = false
		useSingleGlobalResourceSet = true
	}
	
	/* write test */
	component = Writer {
		modelSlot = "experimental"
		uri = "${OUTPUT_DIR}/test_1.xmi"
		cloneSlotContents = false
		useSingleGlobalResourceSet = true
	}
	
	component = ModelComparator {
		testDescription = "COMPARATOR COMPONENT"
		resultURI = "${OUTPUT_DIR}/expected_result_1.xmi"
		testedURI = "${OUTPUT_DIR}/test_1.xmi"
	}
}