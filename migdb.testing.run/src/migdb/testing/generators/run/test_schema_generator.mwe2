module migb.testing.generators.test_schema_generator

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.mwe.*


import org.eclipse.xtext.mwe.SlotEntry
import org.eclipse.xtext.mwe.ResourceLoadingSlotEntry
import org.eclipse.xtext.mwe.Validator
import org.eclipse.xtext.mwe.NameBasedFilter

import org.eclipse.emf.mwe.utils.Writer
import org.eclipse.emf.mwe.utils.Reader

import eu.collectionspro.mwe.*
import migdb.run.utils.*
import migdb.generator.SchemaGenerator

var QVTO_DIR = "../migdb.qvto/transforms"
var RDB_STR_DIR = "${QVTO_DIR}/tests/comparisons_orm_structure"
var OUT_DIR = "output-tests/schemaGenerator/"
var OUT_SLOT = "RESULT_0"

TestWorkflow{	
	component = org.eclipse.emf.mwe.utils.DirectoryCleaner {
		directory = "${OUT_DIR}/"
	}
	
	
	/* Define of RDB metamodel */
	bean=org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri=".."
		registerGeneratedEPackage = "mm.rdb.RdbPackage"
	}
	
	component = TestComponent{
		transformationFile = "${RDB_STR_DIR}/structure_tab_joined_hierarchy_required.qvto"
		qvtComparison =""
		outputParentUri = "${OUT_DIR}"
		testDescription = "TEST structure generation"
	}	
	
	/***** SQL GENERATOR *****/	
	component = CodeGenComponent2 {
		withoutModel = false
		slot = "${OUT_SLOT}"
		generator = SchemaGenerator{
			filename = "test.sql"
		}
		outputPath = "${OUT_DIR}"
	}
	
	
}