@namespace(uri="http://www.collectionspro.eu/jam/mm", prefix="mm")
package mm;

@namespace(uri="http://www.collectionspro.eu/jam/mm/reduced-jam", prefix="reduced")
package reduced {
  class ModelRoot {
    val ModelGeneration[+]#modelRoot modelGenerations;
    val operations.ModelOperation[*]#modelRoot operations;
  }

  class ModelGeneration {
    readonly derived ref ModelRoot[1]#modelGenerations modelRoot;
    attr boolean[1] isMissing = false;
    !ordered val Class[*]#owningModel classes;
  }

  class Class {
    readonly derived ref ModelGeneration[1]#classes owningModel;
    attr String[1] name;
    ref Class parent;
    attr boolean isAbstract = false;
    attr boolean isPrimitive = false;
    !ordered val Property[*]#owningClass properties;
    attr boolean[1] isTransient = false;
    attr boolean[1] isEmbedded = false;
    attr String tableName;
    attr InheritanceType[1] inheritanceType;
  }

  enum InheritanceType {
    __not_defined = 0;
    singleTable = 1;
    tablePerClass = 2;
    joined = 3;
  }

  class Property {
    readonly derived ref Class[1]#properties owningClass;
    attr String[1] name;
    ref Class[1] type;
    ref Property opositeProperty;
    attr int lowerBound = 0;
    attr int upperBound = 1;
    attr boolean isUnique = false;
    attr boolean isOrdered = false;
    attr boolean[1] isTransient = false;
    attr boolean[1] isEmbedded = false;
    attr String columnNamePattern;
    attr boolean[1] isID = false;
    attr String sequenceName;
  }

  @namespace(uri="http://www.collectionspro.eu/jam/mm/model-ops", prefix="model-ops")
  package operations {
    abstract class ModelOperation {
      readonly derived ref ModelRoot[1]#operations modelRoot;
    }

    @OCL(pre="self.ClassName", post="self.ClassName")
    class CreateClass extends ModelOperation {
      attr String[1] ClassName;
    }

    class SetAbstract extends ModelOperation {
      attr String[1] ClassName;
      attr boolean[1] IsAbstract;
    }

    class SetEmbedded extends ModelOperation {
      attr String[1] ClassName;
      attr boolean[1] IsEmbedded;
    }

    class SetParent extends ModelOperation {
      attr String[1] ClassName;
      attr String[1] ParentName;
    }

    class SetPrimitive extends ModelOperation {
      attr String[1] ClassName;
      attr boolean[1] IsPrimitive;
    }

    class AddProperty extends ModelOperation {
      attr String[1] PropertyName;
      attr String[1] Type;
      attr String[1] DefaultValue;
      attr String[1] ParentName;
      attr int[1] LowerBound;
      attr int[1] UpperBound;
    }

    class AddAssociation extends ModelOperation {
      attr String[1] ClassName;
      attr String[1] PropertyName;
      attr String OppositeClassName;
      attr String OppositePropertyName;
    }

    class SetUnique extends ModelOperation {
      attr String[1] ClassName;
      attr String[1] PropertyName;
      attr boolean[1] IsUnique;
    }

    class SetOrdered extends ModelOperation {
      attr String[1] ClassName;
      attr String[1] PropertyName;
      attr boolean[1] IsOrdered;
    }

    class RenameClass extends ModelOperation {
      attr String[1] ClassName;
      attr String[1] Name;
    }

    class RenameProperty extends ModelOperation {
      attr String[1] PropertyName;
      attr String[1] Name;
      attr String[1] ClassName;
    }

    class EditPropertyType extends ModelOperation {
      attr String[1] PropertyName;
      attr String[1] Type;
    }

    class DeleteClass extends ModelOperation {
      attr String[1] ClassName;
    }

    class DeleteProperty extends ModelOperation {
      attr String[1] ClassName;
      attr String[1] PropertyName;
    }

    class DeleteAssociation extends ModelOperation {
      attr String[1] ClassName;
      attr String[1] PropertyName;
      attr String OppositeClassName;
      attr String OppositePropertyName;
    }

  }

}

