import builder_rdb;
import queries_rdb;

modeltype RDB uses "http://www.collectionspro.eu/jam/mm/rdb";

transformation pullUpProperties4_required(out inoutModel : RDB);

main() {
	var publicSchemaName : String := getDefaultSchemaName();
	//reflection of firstProperty name
	var firstColumnName : String := "pulled_first_pr";
	//reflection of secondProperty name
	var secondColumnName : String := "pulled_second_pr";
	//reflection of parent class
	var targetTableName : String := "parent";
	//reflection of child class in hierarchy
	var sourceTableName : String := "child"; 
	var typeTableName : String := "type";
	var oldFirstAssocTableName : String := "child_pulled_first_pr";
	var newFirstAssocTableName : String := "parent_pulled_first_pr";
	var oldSecondAssocTableName : String := "child_pulled_second_pr";
	var newSecondAssocTableName : String := "parent_pulled_second_pr";
	var sourceIdName : String := "id_child";
	var targetIdName : String := "id_parent";
	var typeIdName : String := "id_type";
	
	var whereCondition : String := "child.id_child = parent.id_parent";
	

	var removeFirstFKSource : RDB::ops::ModelOperation := _removeConstraint(
																publicSchemaName,
																oldFirstAssocTableName,
																"fk_child_pulled_first_pr_child");
	var removeFirstFKType : RDB::ops::ModelOperation := _removeConstraint(
																publicSchemaName,
																oldFirstAssocTableName,
																"fk_child_pulled_first_pr_type");
	var removeSecondFKSource : RDB::ops::ModelOperation := _removeConstraint(
																publicSchemaName,
																oldSecondAssocTableName,
																"fk_child_pulled_second_pr_child");
	var removeSecondFKType : RDB::ops::ModelOperation := _removeConstraint(
																publicSchemaName,
																oldSecondAssocTableName,
																"fk_child_pulled_second_pr_type");
	var deleteWhereConditionSecondAssoc : String := "id_child NOT IN (SELECT id_parent FROM public.parent)";
	var deleteDataSecondAssoc : RDB::ops::ModelOperation := _deleteRows(
																	publicSchemaName,
																	oldSecondAssocTableName,
																	deleteWhereConditionSecondAssoc);
	var addSecondFkType : RDB::ops::ModelOperation := _addForeignKey(
															publicSchemaName,
															oldSecondAssocTableName,
															typeIdName,
															"fk_parent_pulled_second_pr_type",
															typeTableName);
	var addSecondFkTarget : RDB::ops::ModelOperation := _addForeignKey(
															publicSchemaName,
															oldSecondAssocTableName,
															sourceIdName,
															"fk_parent_pulled_second_pr_parent",
															targetTableName);
	var renameSecondColumn : RDB::ops::ModelOperation := _renameColumn(
																	publicSchemaName,
																	oldSecondAssocTableName,
																	sourceIdName,
																	targetIdName);
	var renameSecondAssocTable : RDB::ops::ModelOperation := _renameTable(
																		publicSchemaName,
																		oldSecondAssocTableName,
																		newSecondAssocTableName);																																																	
	var deleteWhereFirstAssocCondition : String := deleteWhereConditionSecondAssoc;
	var deleteDataFirstAssoc : RDB::ops::ModelOperation := _deleteRows(
																	publicSchemaName,
																	oldFirstAssocTableName,
																	deleteWhereFirstAssocCondition);
	var addFirstFkType : RDB::ops::ModelOperation := _addForeignKey(
															publicSchemaName,
															oldFirstAssocTableName,
															typeIdName,
															"fk_parent_pulled_first_pr_type",
															typeTableName);
	var addFirstFkTarget : RDB::ops::ModelOperation := _addForeignKey(
																publicSchemaName,
																oldFirstAssocTableName,
																sourceIdName,
																"fk_parent_pulled_first_pr_parent",
																targetTableName);
	var renameFirstColumn : RDB::ops::ModelOperation := _renameColumn(
																	publicSchemaName,
																	oldFirstAssocTableName,
																	sourceIdName,
																	targetIdName);
	var renameFirstAssocTable : RDB::ops::ModelOperation := _renameTable(
																		publicSchemaName,
																		oldFirstAssocTableName,
																		newFirstAssocTableName);
	var ops : OrderedSet(RDB::ops::ModelOperation):= OrderedSet{
															//remove FK first association table
															removeFirstFKSource,
															removeFirstFKType,
															//removeFK second assocTable
															removeSecondFKSource,
															removeSecondFKType,
															//mirrored ops second assoc
															deleteDataSecondAssoc,
															addSecondFkType,
															addSecondFkTarget,
															renameSecondColumn,
															renameSecondAssocTable,
															
															//mirrored ops first assoc
															deleteDataFirstAssoc,
															addFirstFkType,
															addFirstFkTarget,
															renameFirstColumn,
															renameFirstAssocTable
															};
	var model : RDB::ModelRoot := _rdbOperations(ops);	 
}
