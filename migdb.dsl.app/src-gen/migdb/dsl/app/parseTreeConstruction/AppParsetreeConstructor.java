/*
* generated by Xtext
*/
package migdb.dsl.app.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import migdb.dsl.app.services.AppGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class AppParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private AppGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelRoot_StructureParserRuleCall(this, this, 0, inst);
			case 1: return new Structure_EntitiesAssignment(this, this, 1, inst);
			case 2: return new ModelEntity_Alternatives(this, this, 2, inst);
			case 3: return new GeneralClass_Alternatives(this, this, 3, inst);
			case 4: return new PrimitiveClass_Group(this, this, 4, inst);
			case 5: return new EmbeddedClass_Group(this, this, 5, inst);
			case 6: return new StandardClass_Group(this, this, 6, inst);
			case 7: return new Property_Alternatives(this, this, 7, inst);
			case 8: return new MultipliableProperty_Alternatives(this, this, 8, inst);
			case 9: return new EmbeddedProperty_Group(this, this, 9, inst);
			case 10: return new PrimitiveProperty_Group(this, this, 10, inst);
			case 11: return new AssociationProperty_Group(this, this, 11, inst);
			case 12: return new NestedProperty_Group(this, this, 12, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule ModelRoot ****************
 *
 * ModelRoot returns app::ModelRoot:
 * 	Structure;
 *
 **/

// Structure
protected class ModelRoot_StructureParserRuleCall extends RuleCallToken {
	
	public ModelRoot_StructureParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelRootAccess().getStructureParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Structure_EntitiesAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStructureRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Structure_EntitiesAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule ModelRoot ****************/


/************ begin Rule Structure ****************
 *
 * Structure returns app::Structure:
 * 	entities+=ModelEntity*;
 *
 **/

// entities+=ModelEntity*
protected class Structure_EntitiesAssignment extends AssignmentToken  {
	
	public Structure_EntitiesAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructureAccess().getEntitiesAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelEntity_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("entities",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("entities");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelEntityRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStructureAccess().getEntitiesModelEntityParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Structure_EntitiesAssignment(lastRuleCallOrigin, next, actIndex, consumed);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index - 1, consumed);
		}	
	}	
}

/************ end Rule Structure ****************/


/************ begin Rule ModelEntity ****************
 *
 * ModelEntity returns app::ModelEntity:
 * 	GeneralClass | PrimitiveClass;
 *
 **/

// GeneralClass | PrimitiveClass
protected class ModelEntity_Alternatives extends AlternativesToken {

	public ModelEntity_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getModelEntityAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelEntity_GeneralClassParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModelEntity_PrimitiveClassParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmbeddedClassRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getPrimitiveClassRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStandardClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// GeneralClass
protected class ModelEntity_GeneralClassParserRuleCall_0 extends RuleCallToken {
	
	public ModelEntity_GeneralClassParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelEntityAccess().getGeneralClassParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GeneralClass_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmbeddedClassRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStandardClassRule().getType().getClassifier())
			return null;
		if(checkForRecursion(GeneralClass_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// PrimitiveClass
protected class ModelEntity_PrimitiveClassParserRuleCall_1 extends RuleCallToken {
	
	public ModelEntity_PrimitiveClassParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelEntityAccess().getPrimitiveClassParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveClass_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrimitiveClassRule().getType().getClassifier())
			return null;
		if(checkForRecursion(PrimitiveClass_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule ModelEntity ****************/


/************ begin Rule GeneralClass ****************
 *
 * GeneralClass returns app::GeneralClass:
 * 	EmbeddedClass | StandardClass;
 *
 **/

// EmbeddedClass | StandardClass
protected class GeneralClass_Alternatives extends AlternativesToken {

	public GeneralClass_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getGeneralClassAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new GeneralClass_EmbeddedClassParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new GeneralClass_StandardClassParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmbeddedClassRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStandardClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// EmbeddedClass
protected class GeneralClass_EmbeddedClassParserRuleCall_0 extends RuleCallToken {
	
	public GeneralClass_EmbeddedClassParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getGeneralClassAccess().getEmbeddedClassParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmbeddedClassRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EmbeddedClass_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// StandardClass
protected class GeneralClass_StandardClassParserRuleCall_1 extends RuleCallToken {
	
	public GeneralClass_StandardClassParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getGeneralClassAccess().getStandardClassParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStandardClassRule().getType().getClassifier())
			return null;
		if(checkForRecursion(StandardClass_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule GeneralClass ****************/


/************ begin Rule PrimitiveClass ****************
 *
 * PrimitiveClass returns app::PrimitiveClass:
 * 	"primitive" name=ID ":" primitiveType=PrimitiveType;
 *
 **/

// "primitive" name=ID ":" primitiveType=PrimitiveType
protected class PrimitiveClass_Group extends GroupToken {
	
	public PrimitiveClass_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrimitiveClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveClass_PrimitiveTypeAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrimitiveClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "primitive"
protected class PrimitiveClass_PrimitiveKeyword_0 extends KeywordToken  {
	
	public PrimitiveClass_PrimitiveKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrimitiveClassAccess().getPrimitiveKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class PrimitiveClass_NameAssignment_1 extends AssignmentToken  {
	
	public PrimitiveClass_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitiveClassAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveClass_PrimitiveKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrimitiveClassAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPrimitiveClassAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class PrimitiveClass_ColonKeyword_2 extends KeywordToken  {
	
	public PrimitiveClass_ColonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrimitiveClassAccess().getColonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveClass_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// primitiveType=PrimitiveType
protected class PrimitiveClass_PrimitiveTypeAssignment_3 extends AssignmentToken  {
	
	public PrimitiveClass_PrimitiveTypeAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitiveClassAccess().getPrimitiveTypeAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveClass_ColonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("primitiveType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("primitiveType");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getPrimitiveClassAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_3_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getPrimitiveClassAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule PrimitiveClass ****************/


/************ begin Rule EmbeddedClass ****************
 *
 * / **
 *  * descendants of GeneralClass
 *  * / EmbeddedClass returns app::EmbeddedClass:
 * 	"embedded" name=ID "{" "id" idProperty= //FIXME: reference???
 * 	[app::EmbeddedProperty] embeddedProperties+=[app::EmbeddedProperty] embeddedProperties+=[app::EmbeddedProperty]* //FIXME: reference???
 * 	"}";
 *
 **/

// "embedded" name=ID "{" "id" idProperty= //FIXME: reference???
// [app::EmbeddedProperty] embeddedProperties+=[app::EmbeddedProperty] embeddedProperties+=[app::EmbeddedProperty]* //FIXME: reference???
// "}"
protected class EmbeddedClass_Group extends GroupToken {
	
	public EmbeddedClass_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmbeddedClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "embedded"
protected class EmbeddedClass_EmbeddedKeyword_0 extends KeywordToken  {
	
	public EmbeddedClass_EmbeddedKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getEmbeddedKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class EmbeddedClass_NameAssignment_1 extends AssignmentToken  {
	
	public EmbeddedClass_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_EmbeddedKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEmbeddedClassAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEmbeddedClassAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class EmbeddedClass_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public EmbeddedClass_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "id"
protected class EmbeddedClass_IdKeyword_3 extends KeywordToken  {
	
	public EmbeddedClass_IdKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getIdKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// idProperty= //FIXME: reference???
// [app::EmbeddedProperty]
protected class EmbeddedClass_IdPropertyAssignment_4 extends AssignmentToken  {
	
	public EmbeddedClass_IdPropertyAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getIdPropertyAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_IdKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("idProperty",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("idProperty");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEmbeddedClassAccess().getIdPropertyEmbeddedPropertyCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEmbeddedClassAccess().getIdPropertyEmbeddedPropertyCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// embeddedProperties+=[app::EmbeddedProperty]
protected class EmbeddedClass_EmbeddedPropertiesAssignment_5 extends AssignmentToken  {
	
	public EmbeddedClass_EmbeddedPropertiesAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getEmbeddedPropertiesAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_IdPropertyAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("embeddedProperties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("embeddedProperties");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEmbeddedClassAccess().getEmbeddedPropertiesEmbeddedPropertyCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEmbeddedClassAccess().getEmbeddedPropertiesEmbeddedPropertyCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// embeddedProperties+=[app::EmbeddedProperty]*
protected class EmbeddedClass_EmbeddedPropertiesAssignment_6 extends AssignmentToken  {
	
	public EmbeddedClass_EmbeddedPropertiesAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getEmbeddedPropertiesAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_EmbeddedPropertiesAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EmbeddedClass_EmbeddedPropertiesAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("embeddedProperties",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("embeddedProperties");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEmbeddedClassAccess().getEmbeddedPropertiesEmbeddedPropertyCrossReference_6_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEmbeddedClassAccess().getEmbeddedPropertiesEmbeddedPropertyCrossReference_6_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class EmbeddedClass_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public EmbeddedClass_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEmbeddedClassAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedClass_EmbeddedPropertiesAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EmbeddedClass_EmbeddedPropertiesAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule EmbeddedClass ****************/


/************ begin Rule StandardClass ****************
 *
 * StandardClass returns app::StandardClass:
 * 	isAbstract?="abstract"? "class" name=ID ("extends" parent=[app::StandardClass] "by" inheritanceType=InheritanceType)?
 * 	"{" ("id" idProperty=[app::PrimitiveProperty])? //FIXME: reference???
 * 	(properties+=MultipliableProperty properties+=MultipliableProperty*)? "}";
 *
 **/

// isAbstract?="abstract"? "class" name=ID ("extends" parent=[app::StandardClass] "by" inheritanceType=InheritanceType)?
// "{" ("id" idProperty=[app::PrimitiveProperty])? //FIXME: reference???
// (properties+=MultipliableProperty properties+=MultipliableProperty*)? "}"
protected class StandardClass_Group extends GroupToken {
	
	public StandardClass_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStandardClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// isAbstract?="abstract"?
protected class StandardClass_IsAbstractAssignment_0 extends AssignmentToken  {
	
	public StandardClass_IsAbstractAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getIsAbstractAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isAbstract",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isAbstract");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getStandardClassAccess().getIsAbstractAbstractKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// "class"
protected class StandardClass_ClassKeyword_1 extends KeywordToken  {
	
	public StandardClass_ClassKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getClassKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_IsAbstractAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

}

// name=ID
protected class StandardClass_NameAssignment_2 extends AssignmentToken  {
	
	public StandardClass_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_ClassKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStandardClassAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getStandardClassAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("extends" parent=[app::StandardClass] "by" inheritanceType=InheritanceType)?
protected class StandardClass_Group_3 extends GroupToken {
	
	public StandardClass_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_InheritanceTypeAssignment_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "extends"
protected class StandardClass_ExtendsKeyword_3_0 extends KeywordToken  {
	
	public StandardClass_ExtendsKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getExtendsKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// parent=[app::StandardClass]
protected class StandardClass_ParentAssignment_3_1 extends AssignmentToken  {
	
	public StandardClass_ParentAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getParentAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_ExtendsKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parent",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parent");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStandardClassAccess().getParentStandardClassCrossReference_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getStandardClassAccess().getParentStandardClassCrossReference_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "by"
protected class StandardClass_ByKeyword_3_2 extends KeywordToken  {
	
	public StandardClass_ByKeyword_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getByKeyword_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_ParentAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// inheritanceType=InheritanceType
protected class StandardClass_InheritanceTypeAssignment_3_3 extends AssignmentToken  {
	
	public StandardClass_InheritanceTypeAssignment_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getInheritanceTypeAssignment_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_ByKeyword_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("inheritanceType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("inheritanceType");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getStandardClassAccess().getInheritanceTypeInheritanceTypeEnumRuleCall_3_3_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getStandardClassAccess().getInheritanceTypeInheritanceTypeEnumRuleCall_3_3_0();
			return obj;
		}
		return null;
	}

}


// "{"
protected class StandardClass_LeftCurlyBracketKeyword_4 extends KeywordToken  {
	
	public StandardClass_LeftCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getLeftCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StandardClass_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ("id" idProperty=[app::PrimitiveProperty])?
protected class StandardClass_Group_5 extends GroupToken {
	
	public StandardClass_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_IdPropertyAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "id"
protected class StandardClass_IdKeyword_5_0 extends KeywordToken  {
	
	public StandardClass_IdKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getIdKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// idProperty=[app::PrimitiveProperty]
protected class StandardClass_IdPropertyAssignment_5_1 extends AssignmentToken  {
	
	public StandardClass_IdPropertyAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getIdPropertyAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_IdKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("idProperty",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("idProperty");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStandardClassAccess().getIdPropertyPrimitivePropertyCrossReference_5_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getStandardClassAccess().getIdPropertyPrimitivePropertyCrossReference_5_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// (properties+=MultipliableProperty properties+=MultipliableProperty*)?
protected class StandardClass_Group_6 extends GroupToken {
	
	public StandardClass_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_PropertiesAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StandardClass_PropertiesAssignment_6_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// properties+=MultipliableProperty
protected class StandardClass_PropertiesAssignment_6_0 extends AssignmentToken  {
	
	public StandardClass_PropertiesAssignment_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getPropertiesAssignment_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultipliableProperty_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("properties",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("properties");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMultipliablePropertyRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStandardClassAccess().getPropertiesMultipliablePropertyParserRuleCall_6_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new StandardClass_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new StandardClass_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// properties+=MultipliableProperty*
protected class StandardClass_PropertiesAssignment_6_1 extends AssignmentToken  {
	
	public StandardClass_PropertiesAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getPropertiesAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultipliableProperty_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("properties",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("properties");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMultipliablePropertyRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStandardClassAccess().getPropertiesMultipliablePropertyParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new StandardClass_PropertiesAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new StandardClass_PropertiesAssignment_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class StandardClass_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public StandardClass_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStandardClassAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StandardClass_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StandardClass_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new StandardClass_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule StandardClass ****************/


/************ begin Rule Property ****************
 *
 * Property returns app::Property:
 * 	MultipliableProperty | EmbeddedProperty;
 *
 **/

// MultipliableProperty | EmbeddedProperty
protected class Property_Alternatives extends AlternativesToken {

	public Property_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPropertyAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_MultipliablePropertyParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_EmbeddedPropertyParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAssociationPropertyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getEmbeddedPropertyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNestedPropertyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getPrimitivePropertyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// MultipliableProperty
protected class Property_MultipliablePropertyParserRuleCall_0 extends RuleCallToken {
	
	public Property_MultipliablePropertyParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getMultipliablePropertyParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultipliableProperty_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAssociationPropertyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNestedPropertyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getPrimitivePropertyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(MultipliableProperty_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// EmbeddedProperty
protected class Property_EmbeddedPropertyParserRuleCall_1 extends RuleCallToken {
	
	public Property_EmbeddedPropertyParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEmbeddedPropertyParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedProperty_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmbeddedPropertyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(EmbeddedProperty_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Property ****************/


/************ begin Rule MultipliableProperty ****************
 *
 * MultipliableProperty returns app::MultipliableProperty:
 * 	AssociationProperty | PrimitiveProperty | NestedProperty;
 *
 **/

// AssociationProperty | PrimitiveProperty | NestedProperty
protected class MultipliableProperty_Alternatives extends AlternativesToken {

	public MultipliableProperty_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMultipliablePropertyAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultipliableProperty_AssociationPropertyParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MultipliableProperty_PrimitivePropertyParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MultipliableProperty_NestedPropertyParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAssociationPropertyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNestedPropertyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getPrimitivePropertyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// AssociationProperty
protected class MultipliableProperty_AssociationPropertyParserRuleCall_0 extends RuleCallToken {
	
	public MultipliableProperty_AssociationPropertyParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMultipliablePropertyAccess().getAssociationPropertyParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAssociationPropertyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(AssociationProperty_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// PrimitiveProperty
protected class MultipliableProperty_PrimitivePropertyParserRuleCall_1 extends RuleCallToken {
	
	public MultipliableProperty_PrimitivePropertyParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMultipliablePropertyAccess().getPrimitivePropertyParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrimitivePropertyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(PrimitiveProperty_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NestedProperty
protected class MultipliableProperty_NestedPropertyParserRuleCall_2 extends RuleCallToken {
	
	public MultipliableProperty_NestedPropertyParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMultipliablePropertyAccess().getNestedPropertyParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNestedPropertyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NestedProperty_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule MultipliableProperty ****************/


/************ begin Rule EmbeddedProperty ****************
 *
 * EmbeddedProperty returns app::EmbeddedProperty:
 * 	"EmbeddedProperty" isMandatory?="mandatory" name=ID ":" type=[app::PrimitiveClass];
 *
 **/

// "EmbeddedProperty" isMandatory?="mandatory" name=ID ":" type=[app::PrimitiveClass]
protected class EmbeddedProperty_Group extends GroupToken {
	
	public EmbeddedProperty_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEmbeddedPropertyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedProperty_TypeAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEmbeddedPropertyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "EmbeddedProperty"
protected class EmbeddedProperty_EmbeddedPropertyKeyword_0 extends KeywordToken  {
	
	public EmbeddedProperty_EmbeddedPropertyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEmbeddedPropertyAccess().getEmbeddedPropertyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// isMandatory?="mandatory"
protected class EmbeddedProperty_IsMandatoryAssignment_1 extends AssignmentToken  {
	
	public EmbeddedProperty_IsMandatoryAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmbeddedPropertyAccess().getIsMandatoryAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedProperty_EmbeddedPropertyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isMandatory",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isMandatory");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getEmbeddedPropertyAccess().getIsMandatoryMandatoryKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// name=ID
protected class EmbeddedProperty_NameAssignment_2 extends AssignmentToken  {
	
	public EmbeddedProperty_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmbeddedPropertyAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedProperty_IsMandatoryAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEmbeddedPropertyAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEmbeddedPropertyAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ":"
protected class EmbeddedProperty_ColonKeyword_3 extends KeywordToken  {
	
	public EmbeddedProperty_ColonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEmbeddedPropertyAccess().getColonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedProperty_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// type=[app::PrimitiveClass]
protected class EmbeddedProperty_TypeAssignment_4 extends AssignmentToken  {
	
	public EmbeddedProperty_TypeAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEmbeddedPropertyAccess().getTypeAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EmbeddedProperty_ColonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEmbeddedPropertyAccess().getTypePrimitiveClassCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEmbeddedPropertyAccess().getTypePrimitiveClassCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule EmbeddedProperty ****************/


/************ begin Rule PrimitiveProperty ****************
 *
 * PrimitiveProperty returns app::PrimitiveProperty:
 * 	"PrimitiveProperty" (isOrdered?="ordered"? & isUnique?="unique"?) name=ID ("[" upperBound=INT | (lowerBound=INT ".."
 * 	upperBound=INT) "]")? ":" type=[app::PrimitiveClass] ("=" defaultValue=ID)?;
 *
 **/

// "PrimitiveProperty" (isOrdered?="ordered"? & isUnique?="unique"?) name=ID ("[" upperBound=INT | (lowerBound=INT ".."
// upperBound=INT) "]")? ":" type=[app::PrimitiveClass] ("=" defaultValue=ID)?
protected class PrimitiveProperty_Group extends GroupToken {
	
	public PrimitiveProperty_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrimitiveProperty_TypeAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrimitivePropertyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "PrimitiveProperty"
protected class PrimitiveProperty_PrimitivePropertyKeyword_0 extends KeywordToken  {
	
	public PrimitiveProperty_PrimitivePropertyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getPrimitivePropertyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// isOrdered?="ordered"? & isUnique?="unique"?
protected class PrimitiveProperty_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public PrimitiveProperty_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_IsUniqueAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrimitiveProperty_IsOrderedAssignment_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new PrimitiveProperty_PrimitivePropertyKeyword_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// isOrdered?="ordered"?
protected class PrimitiveProperty_IsOrderedAssignment_1_0 extends AssignmentToken  {
	
	public PrimitiveProperty_IsOrderedAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getIsOrderedAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_PrimitivePropertyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isOrdered",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isOrdered");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getPrimitivePropertyAccess().getIsOrderedOrderedKeyword_1_0_0();
			return obj;
		}
		return null;
	}

}

// isUnique?="unique"?
protected class PrimitiveProperty_IsUniqueAssignment_1_1 extends AssignmentToken  {
	
	public PrimitiveProperty_IsUniqueAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getIsUniqueAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_IsOrderedAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrimitiveProperty_PrimitivePropertyKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isUnique",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isUnique");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getPrimitivePropertyAccess().getIsUniqueUniqueKeyword_1_1_0();
			return obj;
		}
		return null;
	}

}


// name=ID
protected class PrimitiveProperty_NameAssignment_2 extends AssignmentToken  {
	
	public PrimitiveProperty_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrimitivePropertyAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPrimitivePropertyAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("[" upperBound=INT | (lowerBound=INT ".." upperBound=INT) "]")?
protected class PrimitiveProperty_Alternatives_3 extends AlternativesToken {

	public PrimitiveProperty_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrimitiveProperty_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "[" upperBound=INT
protected class PrimitiveProperty_Group_3_0 extends GroupToken {
	
	public PrimitiveProperty_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_UpperBoundAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class PrimitiveProperty_LeftSquareBracketKeyword_3_0_0 extends KeywordToken  {
	
	public PrimitiveProperty_LeftSquareBracketKeyword_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getLeftSquareBracketKeyword_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=INT
protected class PrimitiveProperty_UpperBoundAssignment_3_0_1 extends AssignmentToken  {
	
	public PrimitiveProperty_UpperBoundAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getUpperBoundAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_LeftSquareBracketKeyword_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrimitivePropertyAccess().getUpperBoundINTTerminalRuleCall_3_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPrimitivePropertyAccess().getUpperBoundINTTerminalRuleCall_3_0_1_0();
			return obj;
		}
		return null;
	}

}


// (lowerBound=INT ".." upperBound=INT) "]"
protected class PrimitiveProperty_Group_3_1 extends GroupToken {
	
	public PrimitiveProperty_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_RightSquareBracketKeyword_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lowerBound=INT ".." upperBound=INT
protected class PrimitiveProperty_Group_3_1_0 extends GroupToken {
	
	public PrimitiveProperty_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_UpperBoundAssignment_3_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lowerBound=INT
protected class PrimitiveProperty_LowerBoundAssignment_3_1_0_0 extends AssignmentToken  {
	
	public PrimitiveProperty_LowerBoundAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getLowerBoundAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lowerBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lowerBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrimitivePropertyAccess().getLowerBoundINTTerminalRuleCall_3_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPrimitivePropertyAccess().getLowerBoundINTTerminalRuleCall_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ".."
protected class PrimitiveProperty_FullStopFullStopKeyword_3_1_0_1 extends KeywordToken  {
	
	public PrimitiveProperty_FullStopFullStopKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getFullStopFullStopKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_LowerBoundAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=INT
protected class PrimitiveProperty_UpperBoundAssignment_3_1_0_2 extends AssignmentToken  {
	
	public PrimitiveProperty_UpperBoundAssignment_3_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getUpperBoundAssignment_3_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_FullStopFullStopKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrimitivePropertyAccess().getUpperBoundINTTerminalRuleCall_3_1_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPrimitivePropertyAccess().getUpperBoundINTTerminalRuleCall_3_1_0_2_0();
			return obj;
		}
		return null;
	}

}


// "]"
protected class PrimitiveProperty_RightSquareBracketKeyword_3_1_1 extends KeywordToken  {
	
	public PrimitiveProperty_RightSquareBracketKeyword_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getRightSquareBracketKeyword_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ":"
protected class PrimitiveProperty_ColonKeyword_4 extends KeywordToken  {
	
	public PrimitiveProperty_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrimitiveProperty_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// type=[app::PrimitiveClass]
protected class PrimitiveProperty_TypeAssignment_5 extends AssignmentToken  {
	
	public PrimitiveProperty_TypeAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getTypeAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrimitivePropertyAccess().getTypePrimitiveClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPrimitivePropertyAccess().getTypePrimitiveClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("=" defaultValue=ID)?
protected class PrimitiveProperty_Group_6 extends GroupToken {
	
	public PrimitiveProperty_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_DefaultValueAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "="
protected class PrimitiveProperty_EqualsSignKeyword_6_0 extends KeywordToken  {
	
	public PrimitiveProperty_EqualsSignKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getEqualsSignKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_TypeAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// defaultValue=ID
protected class PrimitiveProperty_DefaultValueAssignment_6_1 extends AssignmentToken  {
	
	public PrimitiveProperty_DefaultValueAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimitivePropertyAccess().getDefaultValueAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimitiveProperty_EqualsSignKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defaultValue",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defaultValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPrimitivePropertyAccess().getDefaultValueIDTerminalRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPrimitivePropertyAccess().getDefaultValueIDTerminalRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule PrimitiveProperty ****************/


/************ begin Rule AssociationProperty ****************
 *
 * AssociationProperty returns app::AssociationProperty:
 * 	"AssociationProperty" (isOrdered?="ordered"? & isUnique?="unique"?) name=ID ("[" upperBound=INT | (lowerBound=INT ".."
 * 	upperBound=INT) "]")? ("oposite" oppositeProperty=[app::AssociationProperty])? ":" type=[app::StandardClass];
 *
 **/

// "AssociationProperty" (isOrdered?="ordered"? & isUnique?="unique"?) name=ID ("[" upperBound=INT | (lowerBound=INT ".."
// upperBound=INT) "]")? ("oposite" oppositeProperty=[app::AssociationProperty])? ":" type=[app::StandardClass]
protected class AssociationProperty_Group extends GroupToken {
	
	public AssociationProperty_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_TypeAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAssociationPropertyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "AssociationProperty"
protected class AssociationProperty_AssociationPropertyKeyword_0 extends KeywordToken  {
	
	public AssociationProperty_AssociationPropertyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getAssociationPropertyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// isOrdered?="ordered"? & isUnique?="unique"?
protected class AssociationProperty_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public AssociationProperty_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_IsUniqueAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AssociationProperty_IsOrderedAssignment_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AssociationProperty_AssociationPropertyKeyword_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// isOrdered?="ordered"?
protected class AssociationProperty_IsOrderedAssignment_1_0 extends AssignmentToken  {
	
	public AssociationProperty_IsOrderedAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getIsOrderedAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_AssociationPropertyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isOrdered",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isOrdered");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAssociationPropertyAccess().getIsOrderedOrderedKeyword_1_0_0();
			return obj;
		}
		return null;
	}

}

// isUnique?="unique"?
protected class AssociationProperty_IsUniqueAssignment_1_1 extends AssignmentToken  {
	
	public AssociationProperty_IsUniqueAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getIsUniqueAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_IsOrderedAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AssociationProperty_AssociationPropertyKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isUnique",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isUnique");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAssociationPropertyAccess().getIsUniqueUniqueKeyword_1_1_0();
			return obj;
		}
		return null;
	}

}


// name=ID
protected class AssociationProperty_NameAssignment_2 extends AssignmentToken  {
	
	public AssociationProperty_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAssociationPropertyAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAssociationPropertyAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("[" upperBound=INT | (lowerBound=INT ".." upperBound=INT) "]")?
protected class AssociationProperty_Alternatives_3 extends AlternativesToken {

	public AssociationProperty_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AssociationProperty_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "[" upperBound=INT
protected class AssociationProperty_Group_3_0 extends GroupToken {
	
	public AssociationProperty_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_UpperBoundAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class AssociationProperty_LeftSquareBracketKeyword_3_0_0 extends KeywordToken  {
	
	public AssociationProperty_LeftSquareBracketKeyword_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getLeftSquareBracketKeyword_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=INT
protected class AssociationProperty_UpperBoundAssignment_3_0_1 extends AssignmentToken  {
	
	public AssociationProperty_UpperBoundAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getUpperBoundAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_LeftSquareBracketKeyword_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAssociationPropertyAccess().getUpperBoundINTTerminalRuleCall_3_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAssociationPropertyAccess().getUpperBoundINTTerminalRuleCall_3_0_1_0();
			return obj;
		}
		return null;
	}

}


// (lowerBound=INT ".." upperBound=INT) "]"
protected class AssociationProperty_Group_3_1 extends GroupToken {
	
	public AssociationProperty_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_RightSquareBracketKeyword_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lowerBound=INT ".." upperBound=INT
protected class AssociationProperty_Group_3_1_0 extends GroupToken {
	
	public AssociationProperty_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_UpperBoundAssignment_3_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lowerBound=INT
protected class AssociationProperty_LowerBoundAssignment_3_1_0_0 extends AssignmentToken  {
	
	public AssociationProperty_LowerBoundAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getLowerBoundAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lowerBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lowerBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAssociationPropertyAccess().getLowerBoundINTTerminalRuleCall_3_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAssociationPropertyAccess().getLowerBoundINTTerminalRuleCall_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ".."
protected class AssociationProperty_FullStopFullStopKeyword_3_1_0_1 extends KeywordToken  {
	
	public AssociationProperty_FullStopFullStopKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getFullStopFullStopKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_LowerBoundAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=INT
protected class AssociationProperty_UpperBoundAssignment_3_1_0_2 extends AssignmentToken  {
	
	public AssociationProperty_UpperBoundAssignment_3_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getUpperBoundAssignment_3_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_FullStopFullStopKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAssociationPropertyAccess().getUpperBoundINTTerminalRuleCall_3_1_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAssociationPropertyAccess().getUpperBoundINTTerminalRuleCall_3_1_0_2_0();
			return obj;
		}
		return null;
	}

}


// "]"
protected class AssociationProperty_RightSquareBracketKeyword_3_1_1 extends KeywordToken  {
	
	public AssociationProperty_RightSquareBracketKeyword_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getRightSquareBracketKeyword_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ("oposite" oppositeProperty=[app::AssociationProperty])?
protected class AssociationProperty_Group_4 extends GroupToken {
	
	public AssociationProperty_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_OppositePropertyAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "oposite"
protected class AssociationProperty_OpositeKeyword_4_0 extends KeywordToken  {
	
	public AssociationProperty_OpositeKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getOpositeKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AssociationProperty_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// oppositeProperty=[app::AssociationProperty]
protected class AssociationProperty_OppositePropertyAssignment_4_1 extends AssignmentToken  {
	
	public AssociationProperty_OppositePropertyAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getOppositePropertyAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_OpositeKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("oppositeProperty",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("oppositeProperty");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAssociationPropertyAccess().getOppositePropertyAssociationPropertyCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAssociationPropertyAccess().getOppositePropertyAssociationPropertyCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ":"
protected class AssociationProperty_ColonKeyword_5 extends KeywordToken  {
	
	public AssociationProperty_ColonKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getColonKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AssociationProperty_Alternatives_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AssociationProperty_NameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// type=[app::StandardClass]
protected class AssociationProperty_TypeAssignment_6 extends AssignmentToken  {
	
	public AssociationProperty_TypeAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAssociationPropertyAccess().getTypeAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AssociationProperty_ColonKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAssociationPropertyAccess().getTypeStandardClassCrossReference_6_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getAssociationPropertyAccess().getTypeStandardClassCrossReference_6_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule AssociationProperty ****************/


/************ begin Rule NestedProperty ****************
 *
 * NestedProperty returns app::NestedProperty:
 * 	"NestedProperty" (isOrdered?="ordered"? & isUnique?="unique"?) name=ID ("[" upperBound=INT | (lowerBound=INT ".."
 * 	upperBound=INT) "]")? ":" type=[app::EmbeddedClass];
 *
 **/

// "NestedProperty" (isOrdered?="ordered"? & isUnique?="unique"?) name=ID ("[" upperBound=INT | (lowerBound=INT ".."
// upperBound=INT) "]")? ":" type=[app::EmbeddedClass]
protected class NestedProperty_Group extends GroupToken {
	
	public NestedProperty_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_TypeAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNestedPropertyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "NestedProperty"
protected class NestedProperty_NestedPropertyKeyword_0 extends KeywordToken  {
	
	public NestedProperty_NestedPropertyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getNestedPropertyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// isOrdered?="ordered"? & isUnique?="unique"?
protected class NestedProperty_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public NestedProperty_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_IsUniqueAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NestedProperty_IsOrderedAssignment_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new NestedProperty_NestedPropertyKeyword_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// isOrdered?="ordered"?
protected class NestedProperty_IsOrderedAssignment_1_0 extends AssignmentToken  {
	
	public NestedProperty_IsOrderedAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getIsOrderedAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_NestedPropertyKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isOrdered",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isOrdered");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNestedPropertyAccess().getIsOrderedOrderedKeyword_1_0_0();
			return obj;
		}
		return null;
	}

}

// isUnique?="unique"?
protected class NestedProperty_IsUniqueAssignment_1_1 extends AssignmentToken  {
	
	public NestedProperty_IsUniqueAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getIsUniqueAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_IsOrderedAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NestedProperty_NestedPropertyKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("isUnique",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("isUnique");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getNestedPropertyAccess().getIsUniqueUniqueKeyword_1_1_0();
			return obj;
		}
		return null;
	}

}


// name=ID
protected class NestedProperty_NameAssignment_2 extends AssignmentToken  {
	
	public NestedProperty_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNestedPropertyAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNestedPropertyAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("[" upperBound=INT | (lowerBound=INT ".." upperBound=INT) "]")?
protected class NestedProperty_Alternatives_3 extends AlternativesToken {

	public NestedProperty_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NestedProperty_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "[" upperBound=INT
protected class NestedProperty_Group_3_0 extends GroupToken {
	
	public NestedProperty_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_UpperBoundAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class NestedProperty_LeftSquareBracketKeyword_3_0_0 extends KeywordToken  {
	
	public NestedProperty_LeftSquareBracketKeyword_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getLeftSquareBracketKeyword_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=INT
protected class NestedProperty_UpperBoundAssignment_3_0_1 extends AssignmentToken  {
	
	public NestedProperty_UpperBoundAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getUpperBoundAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_LeftSquareBracketKeyword_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNestedPropertyAccess().getUpperBoundINTTerminalRuleCall_3_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNestedPropertyAccess().getUpperBoundINTTerminalRuleCall_3_0_1_0();
			return obj;
		}
		return null;
	}

}


// (lowerBound=INT ".." upperBound=INT) "]"
protected class NestedProperty_Group_3_1 extends GroupToken {
	
	public NestedProperty_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_RightSquareBracketKeyword_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lowerBound=INT ".." upperBound=INT
protected class NestedProperty_Group_3_1_0 extends GroupToken {
	
	public NestedProperty_Group_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getGroup_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_UpperBoundAssignment_3_1_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lowerBound=INT
protected class NestedProperty_LowerBoundAssignment_3_1_0_0 extends AssignmentToken  {
	
	public NestedProperty_LowerBoundAssignment_3_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getLowerBoundAssignment_3_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lowerBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lowerBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNestedPropertyAccess().getLowerBoundINTTerminalRuleCall_3_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNestedPropertyAccess().getLowerBoundINTTerminalRuleCall_3_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// ".."
protected class NestedProperty_FullStopFullStopKeyword_3_1_0_1 extends KeywordToken  {
	
	public NestedProperty_FullStopFullStopKeyword_3_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getFullStopFullStopKeyword_3_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_LowerBoundAssignment_3_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// upperBound=INT
protected class NestedProperty_UpperBoundAssignment_3_1_0_2 extends AssignmentToken  {
	
	public NestedProperty_UpperBoundAssignment_3_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getUpperBoundAssignment_3_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_FullStopFullStopKeyword_3_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("upperBound",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("upperBound");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNestedPropertyAccess().getUpperBoundINTTerminalRuleCall_3_1_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNestedPropertyAccess().getUpperBoundINTTerminalRuleCall_3_1_0_2_0();
			return obj;
		}
		return null;
	}

}


// "]"
protected class NestedProperty_RightSquareBracketKeyword_3_1_1 extends KeywordToken  {
	
	public NestedProperty_RightSquareBracketKeyword_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getRightSquareBracketKeyword_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_Group_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// ":"
protected class NestedProperty_ColonKeyword_4 extends KeywordToken  {
	
	public NestedProperty_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NestedProperty_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// type=[app::EmbeddedClass]
protected class NestedProperty_TypeAssignment_5 extends AssignmentToken  {
	
	public NestedProperty_TypeAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNestedPropertyAccess().getTypeAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NestedProperty_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNestedPropertyAccess().getTypeEmbeddedClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getNestedPropertyAccess().getTypeEmbeddedClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule NestedProperty ****************/


}
