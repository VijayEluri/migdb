/*
* generated by Xtext
*/
grammar InternalOps;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package migdb.dsl.ops.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package migdb.dsl.ops.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import migdb.dsl.ops.services.OpsGrammarAccess;

}

@parser::members {

 	private OpsGrammarAccess grammarAccess;
 	
    public InternalOpsParser(TokenStream input, OpsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ModelRoot";	
   	}
   	
   	@Override
   	protected OpsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModelRoot
entryRuleModelRoot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRootRule()); }
	 iv_ruleModelRoot=ruleModelRoot 
	 { $current=$iv_ruleModelRoot.current; } 
	 EOF 
;

// Rule ModelRoot
ruleModelRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getModelRootAccess().getOperationsParserRuleCall()); 
    }
    this_Operations_0=ruleOperations
    { 
        $current = $this_Operations_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleOperations
entryRuleOperations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationsRule()); }
	 iv_ruleOperations=ruleOperations 
	 { $current=$iv_ruleOperations.current; } 
	 EOF 
;

// Rule Operations
ruleOperations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationsAccess().getOperationsModelOperationParserRuleCall_0()); 
	    }
		lv_operations_0_0=ruleModelOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationsRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_0_0, 
        		"ModelOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleModelOperation
entryRuleModelOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelOperationRule()); }
	 iv_ruleModelOperation=ruleModelOperation 
	 { $current=$iv_ruleModelOperation.current; } 
	 EOF 
;

// Rule ModelOperation
ruleModelOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getModelOperationAccess().getAtomicOperationParserRuleCall_0()); 
    }
    this_AtomicOperation_0=ruleAtomicOperation
    { 
        $current = $this_AtomicOperation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getModelOperationAccess().getDecomposableOperationParserRuleCall_1()); 
    }
    this_DecomposableOperation_1=ruleDecomposableOperation
    { 
        $current = $this_DecomposableOperation_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAtomicOperation
entryRuleAtomicOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicOperationRule()); }
	 iv_ruleAtomicOperation=ruleAtomicOperation 
	 { $current=$iv_ruleAtomicOperation.current; } 
	 EOF 
;

// Rule AtomicOperation
ruleAtomicOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getAddPrimitiveClassParserRuleCall_0()); 
    }
    this_AddPrimitiveClass_0=ruleAddPrimitiveClass
    { 
        $current = $this_AddPrimitiveClass_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getAddEmbeddedClassParserRuleCall_1()); 
    }
    this_AddEmbeddedClass_1=ruleAddEmbeddedClass
    { 
        $current = $this_AddEmbeddedClass_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getAddStandardClassParserRuleCall_2()); 
    }
    this_AddStandardClass_2=ruleAddStandardClass
    { 
        $current = $this_AddStandardClass_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getRenameEntityParserRuleCall_3()); 
    }
    this_RenameEntity_3=ruleRenameEntity
    { 
        $current = $this_RenameEntity_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getSetParentParserRuleCall_4()); 
    }
    this_SetParent_4=ruleSetParent
    { 
        $current = $this_SetParent_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getSetAbstractParserRuleCall_5()); 
    }
    this_SetAbstract_5=ruleSetAbstract
    { 
        $current = $this_SetAbstract_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getRemoveEntityParserRuleCall_6()); 
    }
    this_RemoveEntity_6=ruleRemoveEntity
    { 
        $current = $this_RemoveEntity_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getAddPropertyParserRuleCall_7()); 
    }
    this_AddProperty_7=ruleAddProperty
    { 
        $current = $this_AddProperty_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getRenamePropertyParserRuleCall_8()); 
    }
    this_RenameProperty_8=ruleRenameProperty
    { 
        $current = $this_RenameProperty_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getRemovePropertyParserRuleCall_9()); 
    }
    this_RemoveProperty_9=ruleRemoveProperty
    { 
        $current = $this_RemoveProperty_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getSetTypeParserRuleCall_10()); 
    }
    this_SetType_10=ruleSetType
    { 
        $current = $this_SetType_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getSetOppositeParserRuleCall_11()); 
    }
    this_SetOpposite_11=ruleSetOpposite
    { 
        $current = $this_SetOpposite_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getSetBoundsParserRuleCall_12()); 
    }
    this_SetBounds_12=ruleSetBounds
    { 
        $current = $this_SetBounds_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getSetOrderedParserRuleCall_13()); 
    }
    this_SetOrdered_13=ruleSetOrdered
    { 
        $current = $this_SetOrdered_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getSetUniqueParserRuleCall_14()); 
    }
    this_SetUnique_14=ruleSetUnique
    { 
        $current = $this_SetUnique_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getCopyPropertyParserRuleCall_15()); 
    }
    this_CopyProperty_15=ruleCopyProperty
    { 
        $current = $this_CopyProperty_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicOperationAccess().getMovePropertyParserRuleCall_16()); 
    }
    this_MoveProperty_16=ruleMoveProperty
    { 
        $current = $this_MoveProperty_16.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDecomposableOperation
entryRuleDecomposableOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecomposableOperationRule()); }
	 iv_ruleDecomposableOperation=ruleDecomposableOperation 
	 { $current=$iv_ruleDecomposableOperation.current; } 
	 EOF 
;

// Rule DecomposableOperation
ruleDecomposableOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDecomposableOperationAccess().getExtractClassParserRuleCall_0()); 
    }
    this_ExtractClass_0=ruleExtractClass
    { 
        $current = $this_ExtractClass_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDecomposableOperationAccess().getExtractParentParserRuleCall_1()); 
    }
    this_ExtractParent_1=ruleExtractParent
    { 
        $current = $this_ExtractParent_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAddPrimitiveClass
entryRuleAddPrimitiveClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddPrimitiveClassRule()); }
	 iv_ruleAddPrimitiveClass=ruleAddPrimitiveClass 
	 { $current=$iv_ruleAddPrimitiveClass.current; } 
	 EOF 
;

// Rule AddPrimitiveClass
ruleAddPrimitiveClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAddPrimitiveClassAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPrimitiveClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddPrimitiveClassAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='primitive' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddPrimitiveClassAccess().getPrimitiveKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAddPrimitiveClassAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_3_0()); 
	    }
		lv_primitiveType_3_0=rulePrimitiveType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddPrimitiveClassRule());
	        }
       		set(
       			$current, 
       			"primitiveType",
        		lv_primitiveType_3_0, 
        		"PrimitiveType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAddEmbeddedClass
entryRuleAddEmbeddedClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddEmbeddedClassRule()); }
	 iv_ruleAddEmbeddedClass=ruleAddEmbeddedClass 
	 { $current=$iv_ruleAddEmbeddedClass.current; } 
	 EOF 
;

// Rule AddEmbeddedClass
ruleAddEmbeddedClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAddEmbeddedClassAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddEmbeddedClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddEmbeddedClassAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='embedded' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddEmbeddedClassAccess().getEmbeddedKeyword_2());
    }
)
;





// Entry rule entryRuleAddStandardClass
entryRuleAddStandardClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddStandardClassRule()); }
	 iv_ruleAddStandardClass=ruleAddStandardClass 
	 { $current=$iv_ruleAddStandardClass.current; } 
	 EOF 
;

// Rule AddStandardClass
ruleAddStandardClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAddStandardClassAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddStandardClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddStandardClassAccess().getEqualsSignKeyword_1());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(
(
		lv_isAbstract_3_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_3_0, grammarAccess.getAddStandardClassAccess().getIsAbstractAbstractKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddStandardClassRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getAddStandardClassAccess().getInheritanceTypeInheritanceTypeEnumRuleCall_2_1_0()); 
	    }
		lv_inheritanceType_4_0=ruleInheritanceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddStandardClassRule());
	        }
       		set(
       			$current, 
       			"inheritanceType",
        		lv_inheritanceType_4_0, 
        		"InheritanceType");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getAddStandardClassAccess().getUnorderedGroup_2());
	}

)?	otherlv_5='class' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAddStandardClassAccess().getClassKeyword_3());
    }
)
;





// Entry rule entryRuleRenameEntity
entryRuleRenameEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRenameEntityRule()); }
	 iv_ruleRenameEntity=ruleRenameEntity 
	 { $current=$iv_ruleRenameEntity.current; } 
	 EOF 
;

// Rule RenameEntity
ruleRenameEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getRenameEntityAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRenameEntityAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		lv_newName_2_0=RULE_ID
		{
			newLeafNode(lv_newName_2_0, grammarAccess.getRenameEntityAccess().getNewNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSetParent
entryRuleSetParent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetParentRule()); }
	 iv_ruleSetParent=ruleSetParent 
	 { $current=$iv_ruleSetParent.current; } 
	 EOF 
;

// Rule SetParent
ruleSetParent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSetParentAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetParentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)((	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetParentAccess().getLessThanSignKeyword_1_0_0());
    }
(
(
		lv_parentName_2_0=RULE_ID
		{
			newLeafNode(lv_parentName_2_0, grammarAccess.getSetParentAccess().getParentNameIDTerminalRuleCall_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetParentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parentName",
        		lv_parentName_2_0, 
        		"ID");
	    }

)
))
    |	otherlv_3='!<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetParentAccess().getExclamationMarkLessThanSignKeyword_1_1());
    }
))
;





// Entry rule entryRuleSetAbstract
entryRuleSetAbstract returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetAbstractRule()); }
	 iv_ruleSetAbstract=ruleSetAbstract 
	 { $current=$iv_ruleSetAbstract.current; } 
	 EOF 
;

// Rule SetAbstract
ruleSetAbstract returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSetAbstractAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetAbstractRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)((
(
		lv_isAbstract_1_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_1_0, grammarAccess.getSetAbstractAccess().getIsAbstractAbstractKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetAbstractRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)
    |	otherlv_2='!abstract' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSetAbstractAccess().getAbstractKeyword_1_1());
    }
))
;





// Entry rule entryRuleRemoveEntity
entryRuleRemoveEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveEntityRule()); }
	 iv_ruleRemoveEntity=ruleRemoveEntity 
	 { $current=$iv_ruleRemoveEntity.current; } 
	 EOF 
;

// Rule RemoveEntity
ruleRemoveEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='!' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRemoveEntityAccess().getExclamationMarkKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRemoveEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleAddProperty
entryRuleAddProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddPropertyRule()); }
	 iv_ruleAddProperty=ruleAddProperty 
	 { $current=$iv_ruleAddProperty.current; } 
	 EOF 
;

// Rule AddProperty
ruleAddProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_owningClassName_0_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_0_0, grammarAccess.getAddPropertyAccess().getOwningClassNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='+=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddPropertyAccess().getPlusSignEqualsSignKeyword_1());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getAddPropertyAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAddPropertyAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAddPropertyAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='!ordered' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddPropertyAccess().getOrderedKeyword_2_0_0());
    }

    |(
(
		lv_isOrdered_4_0=	'ordered' 
    {
        newLeafNode(lv_isOrdered_4_0, grammarAccess.getAddPropertyAccess().getIsOrderedOrderedKeyword_2_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed($current, "isOrdered", true, "ordered");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAddPropertyAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAddPropertyAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAddPropertyAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_5='!unique' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAddPropertyAccess().getUniqueKeyword_2_1_0());
    }

    |(
(
		lv_isUnique_6_0=	'unique' 
    {
        newLeafNode(lv_isUnique_6_0, grammarAccess.getAddPropertyAccess().getIsUniqueUniqueKeyword_2_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed($current, "isUnique", true, "unique");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAddPropertyAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getAddPropertyAccess().getUnorderedGroup_2());
	}

)(
(
		lv_name_7_0=RULE_ID
		{
			newLeafNode(lv_name_7_0, grammarAccess.getAddPropertyAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"ID");
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAddPropertyAccess().getColonKeyword_4());
    }
(
(
		lv_type_9_0=RULE_ID
		{
			newLeafNode(lv_type_9_0, grammarAccess.getAddPropertyAccess().getTypeIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_9_0, 
        		"ID");
	    }

)
)(	otherlv_10='[' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAddPropertyAccess().getLeftSquareBracketKeyword_6_0());
    }
((
(
		lv_upperBound_11_0=RULE_INT
		{
			newLeafNode(lv_upperBound_11_0, grammarAccess.getAddPropertyAccess().getUpperBoundINTTerminalRuleCall_6_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"upperBound",
        		lv_upperBound_11_0, 
        		"INT");
	    }

)
)
    |((
(
		lv_lowerBound_12_0=RULE_INT
		{
			newLeafNode(lv_lowerBound_12_0, grammarAccess.getAddPropertyAccess().getLowerBoundINTTerminalRuleCall_6_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_12_0, 
        		"INT");
	    }

)
)	otherlv_13='..' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAddPropertyAccess().getFullStopFullStopKeyword_6_1_1_1());
    }
(
(
		lv_upperBound_14_0=RULE_INT
		{
			newLeafNode(lv_upperBound_14_0, grammarAccess.getAddPropertyAccess().getUpperBoundINTTerminalRuleCall_6_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"upperBound",
        		lv_upperBound_14_0, 
        		"INT");
	    }

)
)?))	otherlv_15=']' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAddPropertyAccess().getRightSquareBracketKeyword_6_2());
    }
)?(	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getAddPropertyAccess().getEqualsSignKeyword_7_0());
    }
(
(
		lv_defaultValue_17_0=RULE_ID
		{
			newLeafNode(lv_defaultValue_17_0, grammarAccess.getAddPropertyAccess().getDefaultValueIDTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_17_0, 
        		"ID");
	    }

)
))?)
;





// Entry rule entryRuleRenameProperty
entryRuleRenameProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRenamePropertyRule()); }
	 iv_ruleRenameProperty=ruleRenameProperty 
	 { $current=$iv_ruleRenameProperty.current; } 
	 EOF 
;

// Rule RenameProperty
ruleRenameProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_owningClassName_0_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_0_0, grammarAccess.getRenamePropertyAccess().getOwningClassNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenamePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRenamePropertyAccess().getFullStopKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getRenamePropertyAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenamePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRenamePropertyAccess().getHyphenMinusGreaterThanSignKeyword_3());
    }
(
(
		lv_newName_4_0=RULE_ID
		{
			newLeafNode(lv_newName_4_0, grammarAccess.getRenamePropertyAccess().getNewNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenamePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_4_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleRemoveProperty
entryRuleRemoveProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemovePropertyRule()); }
	 iv_ruleRemoveProperty=ruleRemoveProperty 
	 { $current=$iv_ruleRemoveProperty.current; } 
	 EOF 
;

// Rule RemoveProperty
ruleRemoveProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_owningClassName_0_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_0_0, grammarAccess.getRemovePropertyAccess().getOwningClassNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemovePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='-=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRemovePropertyAccess().getHyphenMinusEqualsSignKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getRemovePropertyAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemovePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSetType
entryRuleSetType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetTypeRule()); }
	 iv_ruleSetType=ruleSetType 
	 { $current=$iv_ruleSetType.current; } 
	 EOF 
;

// Rule SetType
ruleSetType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_owningClassName_0_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_0_0, grammarAccess.getSetTypeAccess().getOwningClassNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetTypeAccess().getFullStopKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSetTypeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetTypeAccess().getColonKeyword_3());
    }
(
(
		lv_type_4_0=RULE_ID
		{
			newLeafNode(lv_type_4_0, grammarAccess.getSetTypeAccess().getTypeIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSetOpposite
entryRuleSetOpposite returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetOppositeRule()); }
	 iv_ruleSetOpposite=ruleSetOpposite 
	 { $current=$iv_ruleSetOpposite.current; } 
	 EOF 
;

// Rule SetOpposite
ruleSetOpposite returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_firstClassName_0_0=RULE_ID
		{
			newLeafNode(lv_firstClassName_0_0, grammarAccess.getSetOppositeAccess().getFirstClassNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetOppositeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstClassName",
        		lv_firstClassName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetOppositeAccess().getFullStopKeyword_1());
    }
(
(
		lv_firstPropertyName_2_0=RULE_ID
		{
			newLeafNode(lv_firstPropertyName_2_0, grammarAccess.getSetOppositeAccess().getFirstPropertyNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetOppositeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstPropertyName",
        		lv_firstPropertyName_2_0, 
        		"ID");
	    }

)
)((
(
		lv_isOpposite_3_0=	'<->' 
    {
        newLeafNode(lv_isOpposite_3_0, grammarAccess.getSetOppositeAccess().getIsOppositeLessThanSignHyphenMinusGreaterThanSignKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetOppositeRule());
	        }
       		setWithLastConsumed($current, "isOpposite", true, "<->");
	    }

)
)
    |	otherlv_4='!<->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetOppositeAccess().getExclamationMarkLessThanSignHyphenMinusGreaterThanSignKeyword_3_1());
    }
)(
(
		lv_secondClassName_5_0=RULE_ID
		{
			newLeafNode(lv_secondClassName_5_0, grammarAccess.getSetOppositeAccess().getSecondClassNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetOppositeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"secondClassName",
        		lv_secondClassName_5_0, 
        		"ID");
	    }

)
)	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetOppositeAccess().getFullStopKeyword_5());
    }
(
(
		lv_secondPropertyName_7_0=RULE_ID
		{
			newLeafNode(lv_secondPropertyName_7_0, grammarAccess.getSetOppositeAccess().getSecondPropertyNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetOppositeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"secondPropertyName",
        		lv_secondPropertyName_7_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSetBounds
entryRuleSetBounds returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetBoundsRule()); }
	 iv_ruleSetBounds=ruleSetBounds 
	 { $current=$iv_ruleSetBounds.current; } 
	 EOF 
;

// Rule SetBounds
ruleSetBounds returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_owningClassName_0_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_0_0, grammarAccess.getSetBoundsAccess().getOwningClassNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetBoundsAccess().getFullStopKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSetBoundsAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetBoundsAccess().getLeftSquareBracketKeyword_3_0());
    }
((
(
		lv_upperBound_4_0=RULE_INT
		{
			newLeafNode(lv_upperBound_4_0, grammarAccess.getSetBoundsAccess().getUpperBoundINTTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"upperBound",
        		lv_upperBound_4_0, 
        		"INT");
	    }

)
)
    |((
(
		lv_lowerBound_5_0=RULE_INT
		{
			newLeafNode(lv_lowerBound_5_0, grammarAccess.getSetBoundsAccess().getLowerBoundINTTerminalRuleCall_3_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_5_0, 
        		"INT");
	    }

)
)	otherlv_6='..' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetBoundsAccess().getFullStopFullStopKeyword_3_1_1_1());
    }
(
(
		lv_upperBound_7_0=RULE_INT
		{
			newLeafNode(lv_upperBound_7_0, grammarAccess.getSetBoundsAccess().getUpperBoundINTTerminalRuleCall_3_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetBoundsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"upperBound",
        		lv_upperBound_7_0, 
        		"INT");
	    }

)
)?))	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSetBoundsAccess().getRightSquareBracketKeyword_3_2());
    }
)?)
;





// Entry rule entryRuleSetOrdered
entryRuleSetOrdered returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetOrderedRule()); }
	 iv_ruleSetOrdered=ruleSetOrdered 
	 { $current=$iv_ruleSetOrdered.current; } 
	 EOF 
;

// Rule SetOrdered
ruleSetOrdered returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_owningClassName_0_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_0_0, grammarAccess.getSetOrderedAccess().getOwningClassNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetOrderedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetOrderedAccess().getFullStopKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSetOrderedAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetOrderedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)((
(
		lv_isOrdered_3_0=	'ordered' 
    {
        newLeafNode(lv_isOrdered_3_0, grammarAccess.getSetOrderedAccess().getIsOrderedOrderedKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetOrderedRule());
	        }
       		setWithLastConsumed($current, "isOrdered", true, "ordered");
	    }

)
)
    |	otherlv_4='!ordered' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetOrderedAccess().getOrderedKeyword_3_1());
    }
))
;





// Entry rule entryRuleSetUnique
entryRuleSetUnique returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetUniqueRule()); }
	 iv_ruleSetUnique=ruleSetUnique 
	 { $current=$iv_ruleSetUnique.current; } 
	 EOF 
;

// Rule SetUnique
ruleSetUnique returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_owningClassName_0_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_0_0, grammarAccess.getSetUniqueAccess().getOwningClassNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetUniqueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetUniqueAccess().getFullStopKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSetUniqueAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetUniqueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)((
(
		lv_isUnique_3_0=	'unique' 
    {
        newLeafNode(lv_isUnique_3_0, grammarAccess.getSetUniqueAccess().getIsUniqueUniqueKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetUniqueRule());
	        }
       		setWithLastConsumed($current, "isUnique", true, "unique");
	    }

)
)
    |	otherlv_4='!unique' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetUniqueAccess().getUniqueKeyword_3_1());
    }
))
;





// Entry rule entryRuleCopyProperty
entryRuleCopyProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCopyPropertyRule()); }
	 iv_ruleCopyProperty=ruleCopyProperty 
	 { $current=$iv_ruleCopyProperty.current; } 
	 EOF 
;

// Rule CopyProperty
ruleCopyProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='copy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCopyPropertyAccess().getCopyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCopyPropertyAccess().getTypeMergeTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleMergeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCopyPropertyRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"MergeType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_owningClassName_2_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_2_0, grammarAccess.getCopyPropertyAccess().getOwningClassNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCopyPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_2_0, 
        		"ID");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCopyPropertyAccess().getFullStopKeyword_3());
    }
(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getCopyPropertyAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCopyPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)	otherlv_5='->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCopyPropertyAccess().getHyphenMinusGreaterThanSignKeyword_5());
    }
(
(
		lv_targetClassName_6_0=RULE_ID
		{
			newLeafNode(lv_targetClassName_6_0, grammarAccess.getCopyPropertyAccess().getTargetClassNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCopyPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetClassName",
        		lv_targetClassName_6_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleMoveProperty
entryRuleMoveProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMovePropertyRule()); }
	 iv_ruleMoveProperty=ruleMoveProperty 
	 { $current=$iv_ruleMoveProperty.current; } 
	 EOF 
;

// Rule MoveProperty
ruleMoveProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='move' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMovePropertyAccess().getMoveKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMovePropertyAccess().getTypeMergeTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleMergeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMovePropertyRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"MergeType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_owningClassName_2_0=RULE_ID
		{
			newLeafNode(lv_owningClassName_2_0, grammarAccess.getMovePropertyAccess().getOwningClassNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMovePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"owningClassName",
        		lv_owningClassName_2_0, 
        		"ID");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMovePropertyAccess().getFullStopKeyword_3());
    }
(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getMovePropertyAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMovePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)	otherlv_5='->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMovePropertyAccess().getHyphenMinusGreaterThanSignKeyword_5());
    }
(
(
		lv_targetClassName_6_0=RULE_ID
		{
			newLeafNode(lv_targetClassName_6_0, grammarAccess.getMovePropertyAccess().getTargetClassNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMovePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetClassName",
        		lv_targetClassName_6_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleExtractClass
entryRuleExtractClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtractClassRule()); }
	 iv_ruleExtractClass=ruleExtractClass 
	 { $current=$iv_ruleExtractClass.current; } 
	 EOF 
;

// Rule ExtractClass
ruleExtractClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extract' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExtractClassAccess().getExtractKeyword_0());
    }
(
(
		lv_sourceClassName_1_0=RULE_ID
		{
			newLeafNode(lv_sourceClassName_1_0, grammarAccess.getExtractClassAccess().getSourceClassNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sourceClassName",
        		lv_sourceClassName_1_0, 
        		"ID");
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExtractClassAccess().getFullStopKeyword_2());
    }
	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExtractClassAccess().getLeftSquareBracketKeyword_3());
    }
(
(
		lv_extractPropertiesNames_4_0=RULE_ID
		{
			newLeafNode(lv_extractPropertiesNames_4_0, grammarAccess.getExtractClassAccess().getExtractPropertiesNamesIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"extractPropertiesNames",
        		lv_extractPropertiesNames_4_0, 
        		"ID");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExtractClassAccess().getCommaKeyword_5_0());
    }
(
(
		lv_extractPropertiesNames_6_0=RULE_ID
		{
			newLeafNode(lv_extractPropertiesNames_6_0, grammarAccess.getExtractClassAccess().getExtractPropertiesNamesIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"extractPropertiesNames",
        		lv_extractPropertiesNames_6_0, 
        		"ID");
	    }

)
))*	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExtractClassAccess().getRightSquareBracketKeyword_6());
    }
	otherlv_8='->' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExtractClassAccess().getHyphenMinusGreaterThanSignKeyword_7());
    }
(
(
		lv_extractClassName_9_0=RULE_ID
		{
			newLeafNode(lv_extractClassName_9_0, grammarAccess.getExtractClassAccess().getExtractClassNameIDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"extractClassName",
        		lv_extractClassName_9_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleExtractParent
entryRuleExtractParent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtractParentRule()); }
	 iv_ruleExtractParent=ruleExtractParent 
	 { $current=$iv_ruleExtractParent.current; } 
	 EOF 
;

// Rule ExtractParent
ruleExtractParent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extract' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExtractParentAccess().getExtractKeyword_0());
    }
	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExtractParentAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_sourceClassesName_2_0=RULE_ID
		{
			newLeafNode(lv_sourceClassesName_2_0, grammarAccess.getExtractParentAccess().getSourceClassesNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractParentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"sourceClassesName",
        		lv_sourceClassesName_2_0, 
        		"ID");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExtractParentAccess().getCommaKeyword_3_0());
    }
(
(
		lv_sourceClassesName_4_0=RULE_ID
		{
			newLeafNode(lv_sourceClassesName_4_0, grammarAccess.getExtractParentAccess().getSourceClassesNameIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractParentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"sourceClassesName",
        		lv_sourceClassesName_4_0, 
        		"ID");
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExtractParentAccess().getRightSquareBracketKeyword_4());
    }
	otherlv_6='.' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExtractParentAccess().getFullStopKeyword_5());
    }
	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExtractParentAccess().getLeftSquareBracketKeyword_6());
    }
(
(
		lv_extractPropertiesName_8_0=RULE_ID
		{
			newLeafNode(lv_extractPropertiesName_8_0, grammarAccess.getExtractParentAccess().getExtractPropertiesNameIDTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractParentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"extractPropertiesName",
        		lv_extractPropertiesName_8_0, 
        		"ID");
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExtractParentAccess().getCommaKeyword_8_0());
    }
(
(
		lv_extractPropertiesName_10_0=RULE_ID
		{
			newLeafNode(lv_extractPropertiesName_10_0, grammarAccess.getExtractParentAccess().getExtractPropertiesNameIDTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractParentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"extractPropertiesName",
        		lv_extractPropertiesName_10_0, 
        		"ID");
	    }

)
))*	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExtractParentAccess().getRightSquareBracketKeyword_9());
    }
	otherlv_12='->' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getExtractParentAccess().getHyphenMinusGreaterThanSignKeyword_10());
    }
(
(
		lv_extractParentName_13_0=RULE_ID
		{
			newLeafNode(lv_extractParentName_13_0, grammarAccess.getExtractParentAccess().getExtractParentNameIDTerminalRuleCall_11_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractParentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"extractParentName",
        		lv_extractParentName_13_0, 
        		"ID");
	    }

)
))
;







// Rule MergeType
ruleMergeType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='strict' 
	{
        $current = grammarAccess.getMergeTypeAccess().getStrictEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMergeTypeAccess().getStrictEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='force' 
	{
        $current = grammarAccess.getMergeTypeAccess().getForceEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMergeTypeAccess().getForceEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='tolerant' 
	{
        $current = grammarAccess.getMergeTypeAccess().getTolerantEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMergeTypeAccess().getTolerantEnumLiteralDeclaration_2()); 
    }
));



// Rule PrimitiveType
rulePrimitiveType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='boolean' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getBooleanEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getPrimitiveTypeAccess().getBooleanEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='char' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getCharEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getPrimitiveTypeAccess().getCharEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='int' 
	{
        $current = grammarAccess.getPrimitiveTypeAccess().getIntEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getPrimitiveTypeAccess().getIntEnumLiteralDeclaration_2()); 
    }
));



// Rule InheritanceType
ruleInheritanceType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='joined' 
	{
        $current = grammarAccess.getInheritanceTypeAccess().getJoinedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getInheritanceTypeAccess().getJoinedEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='tablePerClass' 
	{
        $current = grammarAccess.getInheritanceTypeAccess().getTablePerClassEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getInheritanceTypeAccess().getTablePerClassEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='singleTable' 
	{
        $current = grammarAccess.getInheritanceTypeAccess().getSingleTableEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getInheritanceTypeAccess().getSingleTableEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


