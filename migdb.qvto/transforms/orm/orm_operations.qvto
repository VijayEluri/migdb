/*
 * The MIT License
 * 
 * Copyright (c) 2010-2011 MigDB team [https://rabbit.felk.cvut.cz/trac/migdb]
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
 
modeltype APP uses app('http://www.collectionspro.eu/jam/mm/app');
modeltype RDB uses rdb('http://www.collectionspro.eu/jam/mm/rdb');

transformation app_to_rdb(in inApp : APP, inout inRdb : RDB);

main() {
	assert(inApp.rootObjects()->size() = 1);
	assert(inApp.rootObjects()->forAll(oclIsKindOf(APP::ModelRoot)));
	
	log("transformation started...");
	
	var appRoot : APP::ModelRoot = inApp.rootObjects()![APP::ModelRoot];
	var rdbRoot : RDB::ModelRoot = inRdb.rootObjects()![RDB::ModelRoot];
	
	appRoot.operations->forEach(op) {
		log("op " + op.repr());
		op.xmap toRdb(rdbRoot);
	};	
	
}

// mapov�n� dan� operace
abstract mapping APP::operations::ModelOperation::
	toRdb(inout rdbRoot : RDB::ModelRoot);


mapping APP::operations::AddClass::toRdb(inout rdbRoot : RDB::ModelRoot) {
	rdbRoot.operations += object RDB::operations::AddTable {
		owningSchemaName := "zero";
		name := self.name;
	};
}





