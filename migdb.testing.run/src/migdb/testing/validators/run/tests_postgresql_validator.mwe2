module migb.testing.run.postgresql_validator

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.mwe.*


import org.eclipse.xtext.mwe.SlotEntry
import org.eclipse.xtext.mwe.ResourceLoadingSlotEntry
import org.eclipse.xtext.mwe.Validator
import org.eclipse.xtext.mwe.NameBasedFilter

import org.eclipse.emf.mwe.utils.Writer
import org.eclipse.emf.mwe.utils.Reader

import eu.collectionspro.mwe.*
import migdb.generator.*

Workflow{	
	component = org.eclipse.emf.mwe.utils.DirectoryCleaner {
		directory = "output-tests/validator_postgresql/"
	}
	
	
	/* Define of RDB metamodel */
	bean=org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri=".."
		registerGeneratedEPackage = "mm.rdb.RdbPackage"
	}
	
	/* Test_postgresql_01*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_01.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_01"
		outputUri = "output-tests/validator_postgresql/test_postgresql_01.xmi"
	}
	
	/* Test_postgresql_invalid_01*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_invalid_01.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_INVALID_01"
		outputUri = "output-tests/validator_postgresql/test_postgresql_invalid_01.xmi"
	}			
	
	/* Test_postgresql_invalid_02*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_invalid_02.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_INVALID_02"
		outputUri = "output-tests/validator_postgresql/test_postgresql_invalid_02.xmi"
	}			

	
	/* Test_postgresql_invalid_03*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_invalid_03.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_INVALID_03"
		outputUri = "output-tests/validator_postgresql/test_postgresql_invalid_03.xmi"
	}			
	
	/* Test_postgresql_invalid_04*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_invalid_04.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_INVALID_04"
		outputUri = "output-tests/validator_postgresql/test_postgresql_invalid_04.xmi"
	}			

	/* Test_postgresql_invalid_04_b*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_invalid_04_b.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_INVALID_04_B"
		outputUri = "output-tests/validator_postgresql/test_postgresql_invalid_04_b.xmi"
	}			

	/* Test_postgresql_invalid_05*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_invalid_05.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_INVALID_05"
		outputUri = "output-tests/validator_postgresql/test_postgresql_invalid_05.xmi"
	}			

	/* Test_postgresql_invalid_06*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_invalid_06.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_INVALID_06"
		outputUri = "output-tests/validator_postgresql/test_postgresql_invalid_06.xmi"
	}			

	/* Test_postgresql_invalid_06_b*/
	component = QVTOValidatorTest {		
		createTransformation = "../migdb.qvto/transforms/tests/validator_postgresql/test_postgresql_invalid_06_b.qvto"
		testTransformation = "../migdb.qvto/transforms/validators/validator_postgresql.qvto"
		modelSlot = "TEST_POSTGRESQL_INVALID_06_B"
		outputUri = "output-tests/validator_postgresql/test_postgresql_invalid_06_b.xmi"
	}				
}