import builder_rdb;
modeltype RDB uses "http://www.collectionspro.eu/jam/mm/rdb";
transformation secondRDB(inout inoutModel : RDB);

main() {
	// Country Table
	var columnIdCountry : Column = _column("id_country", PrimitiveType::int);
	var indexCountry : RDB::Index := _index("IX_country_id_country", OrderedSet{columnIdCountry});
	var pkCountry : RDB::PrimaryKey := _primaryKey("PK_country", indexCountry);
	var tableCountry : RDB::Table := _table("country", OrderedSet{columnIdCountry, _column("name", PrimitiveType::char)}, OrderedSet{pkCountry});
	
	//LegalPerson Table
	var columnIdLegalPerson : RDB::Column := _column("id_party", PrimitiveType::int);			
	var indexLegalPerson : RDB::Index := _index("IX_legalperson_id_legalperson", OrderedSet{columnIdLegalPerson});
	var pkLegalPerson : RDB::PrimaryKey := _primaryKey("PK_legalperson", indexLegalPerson);
	var tableLegalPerson : RDB::Table := _table("legalperson",OrderedSet{columnIdLegalPerson,_column("regno", PrimitiveType::int), _column("bisname", PrimitiveType::char)}, OrderedSet{pkLegalPerson});

	//NaturalPerson
	var columnIdNaturalPerson : RDB::Column := _column("id_party", PrimitiveType::int);				
	var indexNaturalPerson : RDB::Index := _index("IX_naturalperson_id_naturalperson", OrderedSet{columnIdNaturalPerson});
	var pkNaturalPerson : RDB::PrimaryKey := _primaryKey("PK_naturalperson", indexNaturalPerson);
	var tableNaturalPerson : RDB::Table := _table("naturalperson",OrderedSet{columnIdNaturalPerson,_column("name", PrimitiveType::char), _column("surname", PrimitiveType::char)}, OrderedSet{pkNaturalPerson});	
	
	//Party Table
	var columnIdParty : RDB::Column := _column("id_party", PrimitiveType::int);
	var columnPartyCountry : RDB::Column := _column("country", PrimitiveType::int);				
	var indexParty : RDB::Index := _index("IX_party_id_party", OrderedSet{columnIdParty});
	var pkParty : RDB::PrimaryKey := _primaryKey("PK_party", indexParty);
	var fkPartyCountry : RDB::ForeignKey := _foreignKey("FK_country_id_country", tableCountry, columnPartyCountry);
	var tableParty : RDB::Table := _table("party",OrderedSet{columnIdParty,_column("street", PrimitiveType::char),_column("city", PrimitiveType::char),_column("zip", PrimitiveType::char),columnPartyCountry }, OrderedSet{pkParty, fkPartyCountry});	
	
	var schema : RDB::Schema := object RDB::Schema {
		name := "public";
		tables := Set{tableCountry, tableLegalPerson, tableNaturalPerson, tableParty};
		sequences := Set{ _sequence("seq_global", 1)};
		indexes:= Set{indexCountry, indexParty, indexLegalPerson, indexNaturalPerson};
	};
	
	var model : RDB::ModelRoot := object ModelRoot {
		modelGenerations += object ModelGeneration {
			isMissing := false;
			schemas += Set{schema};
		};
	 };

}
