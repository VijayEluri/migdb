import builder_app;
import queries_app;
modeltype APP uses "http://www.collectionspro.eu/jam/mm/app";

transformation structureComplexApp(out inoutModel : APP);

main(){
	var int : PrimitiveClass := _primitiveClass(getAppDefaultIdTypeName(), app::PrimitiveType::int);
	var string : PrimitiveClass := _primitiveClass("string", app::PrimitiveType::char);
	var joinedRoot : StandardClass := _class("JoinedRoot", _idProperty("idJoinedRoot", int), 
		OrderedSet{_primitiveProperty("joinedRootPr", int)}, app::InheritanceType::joined);
	var joinedChild : StandardClass := _class("JoinedChild", joinedRoot, OrderedSet{
			_primitiveProperty("joinedChildPr", int)}, app::InheritanceType::joined);
	var joinedGrandChild : StandardClass := _class("JoinedGrandChild", joinedChild, OrderedSet{
			_primitiveProperty("joinedGrandChildPr", int)}, app::InheritanceType::joined);
	
	var STRoot : StandardClass := _class("StRoot", _idProperty("idStRoot", int), OrderedSet{
			_primitiveProperty("StRootPr", int)}, app::InheritanceType::singleTable);
	var STChild : StandardClass := _class("StChild", STRoot, OrderedSet{
			_primitiveProperty("StChildPr", int)}, app::InheritanceType::singleTable);
	var STGrandChild : StandardClass := _class("StGrandChild", STChild, OrderedSet{
			_primitiveProperty("StGrandChildPr", int)}, app::InheritanceType::singleTable);

	var TPCRoot : StandardClass := _class("TpcRoot", _idProperty("idTpcRoot", int), 
		OrderedSet{_primitiveProperty("TpcRootPr", int)}, app::InheritanceType::tablePerClass);
	var TPCChild : StandardClass := _class("TpcChild", TPCRoot, 
		OrderedSet{_primitiveProperty("TpcChildPr", int)}, app::InheritanceType::tablePerClass);
	var TPCGrandChild : StandardClass := _class("TpcGrandChild", TPCChild, 
		OrderedSet{_primitiveProperty("TpcGrandChildPr", int)}, 
		app::InheritanceType::tablePerClass);

	var joinedCollection : PrimitiveProperty := _primitiveProperty("collection", int, 0, -1);
	joinedRoot.properties += joinedCollection;
	var TPCCollection : PrimitiveProperty := _primitiveProperty("collection", int, 0, 5);
	TPCRoot.properties += TPCCollection;
	var STCollection : PrimitiveProperty := _primitiveProperty("collection", int, 1, -1);
	STRoot.properties += STCollection;

	var TPCAssocRoot : StandardClass := _class("TpcARoot", _idProperty("idTpcRoot", int), 
		OrderedSet{_primitiveProperty("TpcARootPr", int)}, app::InheritanceType::tablePerClass);
	var TPCAssocChild : StandardClass := _class("TpcAChild", TPCAssocRoot, OrderedSet{
			_primitiveProperty("TpcAChildPr", int)}, app::InheritanceType::tablePerClass);
	var TPCAssocGrandChild : StandardClass := _class("TpcAGrandChild", TPCAssocChild, OrderedSet{
			_primitiveProperty("TPCAGrandChildPr", int)}, app::InheritanceType::tablePerClass);

	var associationProperty : AssociationProperty := _associationProperty("association", 
		TPCAssocRoot);  
	TPCRoot.properties += associationProperty;
	
	_appStructure(OrderedSet{int, string, joinedRoot, joinedChild, joinedGrandChild, STRoot,
		STChild, STGrandChild, TPCRoot, TPCChild, TPCGrandChild, TPCAssocRoot, TPCAssocChild, 
		TPCAssocGrandChild});
}