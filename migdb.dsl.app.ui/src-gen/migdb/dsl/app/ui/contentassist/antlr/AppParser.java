/*
* generated by Xtext
*/
package migdb.dsl.app.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import migdb.dsl.app.services.AppGrammarAccess;

public class AppParser extends AbstractContentAssistParser {
	
	@Inject
	private AppGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected migdb.dsl.app.ui.contentassist.antlr.internal.InternalAppParser createParser() {
		migdb.dsl.app.ui.contentassist.antlr.internal.InternalAppParser result = new migdb.dsl.app.ui.contentassist.antlr.internal.InternalAppParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelEntityAccess().getAlternatives(), "rule__ModelEntity__Alternatives");
					put(grammarAccess.getGeneralClassAccess().getAlternatives(), "rule__GeneralClass__Alternatives");
					put(grammarAccess.getPropertyAccess().getAlternatives(), "rule__Property__Alternatives");
					put(grammarAccess.getMultipliablePropertyAccess().getAlternatives(), "rule__MultipliableProperty__Alternatives");
					put(grammarAccess.getPrimitivePropertyAccess().getAlternatives_3(), "rule__PrimitiveProperty__Alternatives_3");
					put(grammarAccess.getAssociationPropertyAccess().getAlternatives_3(), "rule__AssociationProperty__Alternatives_3");
					put(grammarAccess.getNestedPropertyAccess().getAlternatives_3(), "rule__NestedProperty__Alternatives_3");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
					put(grammarAccess.getInheritanceTypeAccess().getAlternatives(), "rule__InheritanceType__Alternatives");
					put(grammarAccess.getPrimitiveClassAccess().getGroup(), "rule__PrimitiveClass__Group__0");
					put(grammarAccess.getEmbeddedClassAccess().getGroup(), "rule__EmbeddedClass__Group__0");
					put(grammarAccess.getStandardClassAccess().getGroup(), "rule__StandardClass__Group__0");
					put(grammarAccess.getStandardClassAccess().getGroup_3(), "rule__StandardClass__Group_3__0");
					put(grammarAccess.getStandardClassAccess().getGroup_5(), "rule__StandardClass__Group_5__0");
					put(grammarAccess.getStandardClassAccess().getGroup_6(), "rule__StandardClass__Group_6__0");
					put(grammarAccess.getEmbeddedPropertyAccess().getGroup(), "rule__EmbeddedProperty__Group__0");
					put(grammarAccess.getPrimitivePropertyAccess().getGroup(), "rule__PrimitiveProperty__Group__0");
					put(grammarAccess.getPrimitivePropertyAccess().getGroup_3_0(), "rule__PrimitiveProperty__Group_3_0__0");
					put(grammarAccess.getPrimitivePropertyAccess().getGroup_3_1(), "rule__PrimitiveProperty__Group_3_1__0");
					put(grammarAccess.getPrimitivePropertyAccess().getGroup_3_1_0(), "rule__PrimitiveProperty__Group_3_1_0__0");
					put(grammarAccess.getPrimitivePropertyAccess().getGroup_6(), "rule__PrimitiveProperty__Group_6__0");
					put(grammarAccess.getAssociationPropertyAccess().getGroup(), "rule__AssociationProperty__Group__0");
					put(grammarAccess.getAssociationPropertyAccess().getGroup_3_0(), "rule__AssociationProperty__Group_3_0__0");
					put(grammarAccess.getAssociationPropertyAccess().getGroup_3_1(), "rule__AssociationProperty__Group_3_1__0");
					put(grammarAccess.getAssociationPropertyAccess().getGroup_3_1_0(), "rule__AssociationProperty__Group_3_1_0__0");
					put(grammarAccess.getAssociationPropertyAccess().getGroup_4(), "rule__AssociationProperty__Group_4__0");
					put(grammarAccess.getNestedPropertyAccess().getGroup(), "rule__NestedProperty__Group__0");
					put(grammarAccess.getNestedPropertyAccess().getGroup_3_0(), "rule__NestedProperty__Group_3_0__0");
					put(grammarAccess.getNestedPropertyAccess().getGroup_3_1(), "rule__NestedProperty__Group_3_1__0");
					put(grammarAccess.getNestedPropertyAccess().getGroup_3_1_0(), "rule__NestedProperty__Group_3_1_0__0");
					put(grammarAccess.getStructureAccess().getEntitiesAssignment(), "rule__Structure__EntitiesAssignment");
					put(grammarAccess.getPrimitiveClassAccess().getNameAssignment_1(), "rule__PrimitiveClass__NameAssignment_1");
					put(grammarAccess.getPrimitiveClassAccess().getPrimitiveTypeAssignment_3(), "rule__PrimitiveClass__PrimitiveTypeAssignment_3");
					put(grammarAccess.getEmbeddedClassAccess().getNameAssignment_1(), "rule__EmbeddedClass__NameAssignment_1");
					put(grammarAccess.getEmbeddedClassAccess().getIdPropertyAssignment_4(), "rule__EmbeddedClass__IdPropertyAssignment_4");
					put(grammarAccess.getEmbeddedClassAccess().getEmbeddedPropertiesAssignment_5(), "rule__EmbeddedClass__EmbeddedPropertiesAssignment_5");
					put(grammarAccess.getEmbeddedClassAccess().getEmbeddedPropertiesAssignment_6(), "rule__EmbeddedClass__EmbeddedPropertiesAssignment_6");
					put(grammarAccess.getStandardClassAccess().getIsAbstractAssignment_0(), "rule__StandardClass__IsAbstractAssignment_0");
					put(grammarAccess.getStandardClassAccess().getNameAssignment_2(), "rule__StandardClass__NameAssignment_2");
					put(grammarAccess.getStandardClassAccess().getParentAssignment_3_1(), "rule__StandardClass__ParentAssignment_3_1");
					put(grammarAccess.getStandardClassAccess().getInheritanceTypeAssignment_3_3(), "rule__StandardClass__InheritanceTypeAssignment_3_3");
					put(grammarAccess.getStandardClassAccess().getIdPropertyAssignment_5_1(), "rule__StandardClass__IdPropertyAssignment_5_1");
					put(grammarAccess.getStandardClassAccess().getPropertiesAssignment_6_0(), "rule__StandardClass__PropertiesAssignment_6_0");
					put(grammarAccess.getStandardClassAccess().getPropertiesAssignment_6_1(), "rule__StandardClass__PropertiesAssignment_6_1");
					put(grammarAccess.getEmbeddedPropertyAccess().getIsMandatoryAssignment_1(), "rule__EmbeddedProperty__IsMandatoryAssignment_1");
					put(grammarAccess.getEmbeddedPropertyAccess().getNameAssignment_2(), "rule__EmbeddedProperty__NameAssignment_2");
					put(grammarAccess.getEmbeddedPropertyAccess().getTypeAssignment_4(), "rule__EmbeddedProperty__TypeAssignment_4");
					put(grammarAccess.getPrimitivePropertyAccess().getIsOrderedAssignment_1_0(), "rule__PrimitiveProperty__IsOrderedAssignment_1_0");
					put(grammarAccess.getPrimitivePropertyAccess().getIsUniqueAssignment_1_1(), "rule__PrimitiveProperty__IsUniqueAssignment_1_1");
					put(grammarAccess.getPrimitivePropertyAccess().getNameAssignment_2(), "rule__PrimitiveProperty__NameAssignment_2");
					put(grammarAccess.getPrimitivePropertyAccess().getUpperBoundAssignment_3_0_1(), "rule__PrimitiveProperty__UpperBoundAssignment_3_0_1");
					put(grammarAccess.getPrimitivePropertyAccess().getLowerBoundAssignment_3_1_0_0(), "rule__PrimitiveProperty__LowerBoundAssignment_3_1_0_0");
					put(grammarAccess.getPrimitivePropertyAccess().getUpperBoundAssignment_3_1_0_2(), "rule__PrimitiveProperty__UpperBoundAssignment_3_1_0_2");
					put(grammarAccess.getPrimitivePropertyAccess().getTypeAssignment_5(), "rule__PrimitiveProperty__TypeAssignment_5");
					put(grammarAccess.getPrimitivePropertyAccess().getDefaultValueAssignment_6_1(), "rule__PrimitiveProperty__DefaultValueAssignment_6_1");
					put(grammarAccess.getAssociationPropertyAccess().getIsOrderedAssignment_1_0(), "rule__AssociationProperty__IsOrderedAssignment_1_0");
					put(grammarAccess.getAssociationPropertyAccess().getIsUniqueAssignment_1_1(), "rule__AssociationProperty__IsUniqueAssignment_1_1");
					put(grammarAccess.getAssociationPropertyAccess().getNameAssignment_2(), "rule__AssociationProperty__NameAssignment_2");
					put(grammarAccess.getAssociationPropertyAccess().getUpperBoundAssignment_3_0_1(), "rule__AssociationProperty__UpperBoundAssignment_3_0_1");
					put(grammarAccess.getAssociationPropertyAccess().getLowerBoundAssignment_3_1_0_0(), "rule__AssociationProperty__LowerBoundAssignment_3_1_0_0");
					put(grammarAccess.getAssociationPropertyAccess().getUpperBoundAssignment_3_1_0_2(), "rule__AssociationProperty__UpperBoundAssignment_3_1_0_2");
					put(grammarAccess.getAssociationPropertyAccess().getOppositePropertyAssignment_4_1(), "rule__AssociationProperty__OppositePropertyAssignment_4_1");
					put(grammarAccess.getAssociationPropertyAccess().getTypeAssignment_6(), "rule__AssociationProperty__TypeAssignment_6");
					put(grammarAccess.getNestedPropertyAccess().getIsOrderedAssignment_1_0(), "rule__NestedProperty__IsOrderedAssignment_1_0");
					put(grammarAccess.getNestedPropertyAccess().getIsUniqueAssignment_1_1(), "rule__NestedProperty__IsUniqueAssignment_1_1");
					put(grammarAccess.getNestedPropertyAccess().getNameAssignment_2(), "rule__NestedProperty__NameAssignment_2");
					put(grammarAccess.getNestedPropertyAccess().getUpperBoundAssignment_3_0_1(), "rule__NestedProperty__UpperBoundAssignment_3_0_1");
					put(grammarAccess.getNestedPropertyAccess().getLowerBoundAssignment_3_1_0_0(), "rule__NestedProperty__LowerBoundAssignment_3_1_0_0");
					put(grammarAccess.getNestedPropertyAccess().getUpperBoundAssignment_3_1_0_2(), "rule__NestedProperty__UpperBoundAssignment_3_1_0_2");
					put(grammarAccess.getNestedPropertyAccess().getTypeAssignment_5(), "rule__NestedProperty__TypeAssignment_5");
					put(grammarAccess.getPrimitivePropertyAccess().getUnorderedGroup_1(), "rule__PrimitiveProperty__UnorderedGroup_1");
					put(grammarAccess.getAssociationPropertyAccess().getUnorderedGroup_1(), "rule__AssociationProperty__UnorderedGroup_1");
					put(grammarAccess.getNestedPropertyAccess().getUnorderedGroup_1(), "rule__NestedProperty__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			migdb.dsl.app.ui.contentassist.antlr.internal.InternalAppParser typedParser = (migdb.dsl.app.ui.contentassist.antlr.internal.InternalAppParser) parser;
			typedParser.entryRuleModelRoot();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AppGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AppGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
