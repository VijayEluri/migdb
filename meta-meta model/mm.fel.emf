@namespace(uri="http://www.collectionspro.eu/jam/mm", prefix="mm")
package mm;

@namespace(uri="http://www.collectionspro.eu/jam/mm/reduced-jam", prefix="reduced")
package reduced {

	class ModelRoot {
		ordered val ModelGeneration[1..*]#modelRoot modelGenerations;
		ordered val operations.ModelOperation[*]#modelRoot operations;
	}

	class ModelGeneration {
		// derived owner
		derived readonly ref ModelRoot[1]#modelGenerations modelRoot; 

		// If isMissing == true then classes can and should be empty
		attr boolean[1] isMissing = false;
		!ordered val Class[*]#owningModel classes;
	}
	
	class Class {
		// derived owner
		derived readonly ref ModelGeneration[1]#classes owningModel;
		
		attr String[1] name;
		ref Class[0..1] parent;	
		attr boolean isAbstract = false;
		attr boolean isPrimitive = false;
		
		!ordered val Property[*]#owningClass properties;
		
		/******************************/
		/*** SERIALIZATION SETTINGS ***/

		// If true, all other attributes are meaningless and the class is not serialized at all
		attr boolean[1] isTransient = false;

		// The class is embedded, so it always persisted in context of owning class 
		attr boolean[1] isEmbedded = false;

		// Name of table overriding the default name
		attr String[0..1] tableName; 
		attr InheritanceType[1] inheritanceType;
	}
	
	// singleTable: All classes in the tree hierarchy is persiseted to one common table
	// tablePerClass: Indepenedent table for each class - DO NOT SUPPORT
	// joined: Each class in the hierarchy has its own table for owned value attributes 
	enum InheritanceType {
		__not_defined;
		singleTable;	
		tablePerClass;
		joined;
	}

	class Property {
		// derived owner
		derived readonly ref Class[1]#properties owningClass;
		
		attr String[1] name;
		ref Class[1] type;
		ref Property[0..1] opositeProperty;
		
		// Multiplicity specification
		// -1 means *
		attr int lowerBound = 0;
		attr int upperBound = 1;
		// For upper bound > 1 or *
		attr boolean isUnique = false;
		attr boolean isOrdered = false;

		/******************************/
		/*** SERIALIZATION SETTINGS ***/

		// If true, this property should not be serialized
		attr boolean[1] isTransient = false;

		// true for all properties of embedded class, false otherwise
		attr boolean[1] isEmbedded = false;
		// if isEmbedded then column name for the property is computed by the pattern 
		attr String[0..1] columnNamePattern;

		// true if the property holds unique identificator of owner class' instances 
		// each serialized class has to have 1! property with isID = true
		attr boolean[1] isID = false;
		// name of sequence for 
		attr String[0..1] sequenceName;
		// if specified, overrides dedfault derived column name
	}
	
@namespace(uri="http://www.collectionspro.eu/jam/mm/model-ops", prefix="model-ops")
package operations {

	abstract class ModelOperation {
		// derived owner
		derived readonly ref reduced.ModelRoot[1]#operations modelRoot;			
	}
}
}

