import builder_app;
modeltype APP uses "http://www.collectionspro.eu/jam/mm/app";
transformation build_model(inout inoutModel : APP);


main() {	
	var integer : APP::PrimitiveClass := _primitiveClass("Integer", PrimitiveType::int);
	var string : APP::PrimitiveClass := _primitiveClass("String", PrimitiveType::char);
	var country : APP::Class := object APP::Class {
		name := "Country";
		properties += Set{ _property("id",integer,true), _property("name", string)};		
	};								  																				  									  												  												  									  	
	
	var model : APP::ModelRoot := object ModelRoot {
		modelGenerations += object ModelGeneration {
			isMissing := false;
			classes += Set{
							integer,string,country,
							object APP::Class {
								name := "LegalPerson";
								properties += Set{ _property("id",integer,true),_property("regNo", integer), _property("busName", string), _property("street", string),
													_property("city", string), _property("zip", string), _property("country", country)};							
							},
							object APP::Class {
								name := "NaturalPerson";
								properties += Set{ _property("id",integer,true),_property("name", integer), _property("surname", string), _property("street", string),
													_property("city", string), _property("zip", string), _property("country", country)};							
							}
						};
		};
	 };
	 
	 model.operations += addClass("Party", false, InheritanceType::joined);
	 model.operations += addProperty("Party", "street", "String");
	 model.operations += addProperty("Party", "city", "String");
	 model.operations += addProperty("Party", "zip", "String");
	 model.operations += addProperty("Party", "country", "Country");
	 model.operations += setParent("LegalPerson", "Party", OrderedSet{"street", "city", "zip", "country"});
	 model.operations += setParent("NaturalPerson", "Party", OrderedSet{"street", "city", "zip", "country"});
	 model.operations += extractClass("Party", OrderedSet{"street", "city","zip", "country"}, "Address");
	 model.operations += renameProperty("Party", "address", "residentialAddress");
	 model.operations += addProperty("Party", "contactAddress", "Country");
}