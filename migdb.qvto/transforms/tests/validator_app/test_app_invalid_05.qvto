import builder_app_link;
modeltype APP uses "http://www.collectionspro.eu/jam/mm/app";
transformation secondAPP(out inoutModel : APP);

main() {
	log("TEST_APP_INVALID_05 - invalid : primitive oppositeProperty");	
	var integer : APP::PrimitiveClass := _primitiveClass("Integer", PrimitiveType::int);
	var string : APP::PrimitiveClass := _primitiveClass("String", PrimitiveType::char);
	var money : APP::StandardClass := _class("money", OrderedSet{ _property("name", string)}, _idProperty( integer));
	
	var country : APP::StandardClass := object StandardClass{
		name := "Country";
		properties := OrderedSet{ _property("name", string)};
	};
	
	var idPropCountry : APP::Property = _idProperty( integer);
	var propMoney : APP::Property := _property("owningCountry", country);
	propMoney.oppositeProperty := idPropCountry;
	
	country.properties += idPropCountry;
	country.idProperty := idPropCountry;
	money.properties += propMoney;

	
	var model : APP::ModelRoot := object ModelRoot {
		modelGenerations += object ModelGeneration {
			isMissing := false;
			entities += Set{integer,string,country, money
			};
		};
	 };
	 
}