module migdb.run.build

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.mwe.*


import org.eclipse.xtext.mwe.SlotEntry
import org.eclipse.xtext.mwe.ResourceLoadingSlotEntry
import org.eclipse.xtext.mwe.Validator
import org.eclipse.xtext.mwe.NameBasedFilter

import org.eclipse.emf.mwe.utils.Writer
import org.eclipse.emf.mwe.utils.Reader

import eu.collectionspro.mwe.*
import migdb.generator.*

Workflow {
/***** DEFINE META-MODELS *****/	
/**/
	bean=org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri=".."
		registerGeneratedEPackage = "mm.app.AppPackage"
	}
/**/
	bean=org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri=".."
		registerGeneratedEPackage = "mm.rdb.RdbPackage"
	}

/***** CLEAN DIRECTORIES [SLQ,XMI] *****/		
/**/
	component = org.eclipse.emf.mwe.utils.DirectoryCleaner {
		directory = "output_sql_build"
	}	
/**/
	component = org.eclipse.emf.mwe.utils.DirectoryCleaner {
		directory = "output_xmi_build"
	}
	
/***** BUILD MODELS *****/	
/**/
	component = QVTOExecutor {
		transformationFile = "../migdb.qvto/transforms/builders/buildAPP.qvto"
		outputSlot = "buildModelAPP"
	}
/**/
	component = QVTOExecutor {
		transformationFile = "../migdb.qvto/transforms/builders/buildRDB.qvto"
		outputSlot = "buildModelRDB"
	}
	
/***** APP EVOLUTION *****/			
/**/
	component = QVTOExecutor {
		inputSlot = "buildModelAPP"
		transformationFile = "../migdb.qvto/transforms/evolution/populate_generations_app.qvto"
		outputSlot = "generationModelAPP"
	}

/***** ORM MAPPING *****/	
/**/
	component = QVTOExecutor {
		inputSlot = "generationModelAPP"
		inOutSlot = "buildModelRDB"
		transformationFile = "../migdb.qvto/transforms/orm/orm_operations.qvto"
	}

/***** RDB EVOLUTION *****/		
/**/
	component = QVTOExecutor {
		inputSlot = "buildModelRDB"
		transformationFile = "../migdb.qvto/transforms/evolution/populate_generations_rdb.qvto"
		outputSlot = "generationModelRDB"
	}
	
/***** WRITE XMI FILES *****/	
/**/
	component = Writer {
		modelSlot = "generationModelAPP"
		uri = "output_xmi_build/outAPP.xmi"
		cloneSlotContents = false
		useSingleGlobalResourceSet = true
	}
/**/
	component = Writer {
		modelSlot = "generationModelRDB"
		uri = "output_xmi_build/outRDB.xmi"
		cloneSlotContents = false
		useSingleGlobalResourceSet = true
	}
	
/***** SQL GENERATOR *****/		
/**/
	component = CodeGenComponent {
		withoutModel = false
		slot = "generationModelRDB"
		generator = Generator {}
		outputPath = "output_sql_build/"
	}
	
/***** DATABASE CONNECT *****/		
/**
	component = CommandLineExec{
		command = "ruby ../migdb.ruby.sql/script.rb output_sql_build postgres postgres 123456"
	}		
/**/	
}