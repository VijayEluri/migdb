import builder_rdb;
import queries_rdb;

modeltype RDB uses "http://www.collectionspro.eu/jam/mm/rdb";

transformation addProperty5_required(out inoutModel : RDB);

main() {
	var publicSchemaName : String := getDefaultSchemaName();
	var collectionTableName : String := "col_tab_pr";
	var addTable : RDB::ops::AddTable := _addTable(
												publicSchemaName,
												collectionTableName);
	var addCol : RDB::ops::AddColumn := _addColumn(
											publicSchemaName,
											collectionTableName,
											"id_tab",
											PrimitiveType::int);										
	var addDataCol : RDB::ops::AddColumn := _addColumn(
											publicSchemaName,
											collectionTableName,
											"pr",
											PrimitiveType::int);
	var addFK : RDB::ops::ModelOperation := _addForeignKey(
												publicSchemaName,
												collectionTableName,
												"id_tab",
												"fk_col_tab_pr",
												"tab");
	var addOrderingCol : RDB::ops::AddColumn := _addColumn(
													publicSchemaName,
													collectionTableName,
													"ordering",
													RDB::PrimitiveType::int);
	var uxNames : OrderedSet(String) := OrderedSet{
											"id_tab", 
											"pr"};
	var addUX : RDB::ops::AddUnique := _addUnique(
											publicSchemaName,
											collectionTableName,
											uxNames,
											"ux_tab_pr");																																							
																						
	var orderingUXColNames : OrderedSet(String) := OrderedSet{
														"id_tab", 
														"ordering"};
	var addOrderingUX : RDB::ops::AddUnique := _addUnique(
													publicSchemaName,
													collectionTableName,
													orderingUXColNames,
													"ux_col_tab_pr_ord");
	var ops : OrderedSet(RDB::ops::ModelOperation):= OrderedSet{
															addTable, 
															addCol, 
															addDataCol,  
															addFK, 
															addOrderingCol, 
															addUX, 
															addOrderingUX};
	var model : RDB::ModelRoot := _rdbOperations(ops);	 
}
