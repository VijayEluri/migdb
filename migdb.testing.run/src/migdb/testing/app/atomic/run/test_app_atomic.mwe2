module migb.testing.app.atomic.run.test_app_atomic

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.mwe.*

import org.eclipse.xtext.mwe.SlotEntry
import org.eclipse.xtext.mwe.ResourceLoadingSlotEntry
import org.eclipse.xtext.mwe.Validator
import org.eclipse.xtext.mwe.NameBasedFilter

import org.eclipse.emf.mwe.utils.Writer
import org.eclipse.emf.mwe.utils.Reader

import eu.collectionspro.mwe.*
import migdb.generator.*

var QVTO_DIR = "../migdb.qvto/transforms"
var OUTPUT_BASE_DIR = "output-tests/app_atomic"
var IN_OPS = "${QVTO_DIR}/tests/operations/app"
var IN_STR = "${QVTO_DIR}/tests/structures/app/"
var COMPARE_ERRORS_DIR = "${QVTO_DIR}/tests/errors"
var COMPARISONS_STRUCTURES_DIR = "${QVTO_DIR}/tests/comparisons_app_atomic"
var TEST_TRANSFORMATION = "${QVTO_DIR}/main/evolution_app_run.qvto"

TestWorkflow {
/***** DEFINE META-MODELS *****/
/**/
	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri = ".."
		registerGeneratedEPackage = "mm.app.AppPackage"
	}

	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri = ".."
		registerGeneratedEPackage = "mm.errors.ErrorsPackage"
	}

	/***** CLEAN DIRECTORIES [XMI] *****/
	/**/
	component = org.eclipse.emf.mwe.utils.DirectoryCleaner {
		directory = "${OUTPUT_BASE_DIR}"
	}

	/***** MAIN TESTING *****/
	/**/
	component = TestComponent{
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/2_extractClass"
		qvtInput = "${IN_STR}/extractClass_str.qvto"
		qvtInput = "${IN_OPS}/extractClass_ops.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/extractClass_required.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "extractClass"
	}		

	component = TestComponent{
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/1_addClass"
		qvtInput = "${IN_STR}/structure_int.qvto"
		qvtInput = "${IN_OPS}/addClass1.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/addClass1_required"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "addClass"
	}
	
	component = TestComponent{
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/2_addProperty"
		qvtInput = "${IN_STR}/structure_tab_joined_hierarchy.qvto"
		qvtInput = "${IN_OPS}/addProperty1.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/addProperty1_required"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "addProperty"
	}	
	
	component = TestComponent{
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/3_addPrimitiveClass"
		qvtInput = "${IN_STR}/structure_int.qvto"
		qvtInput = "${IN_OPS}/addPrimitiveClass1.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/addPrimitiveClass1_required"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "addPrimitiveClass"
	}

	component = TestComponent{
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/4_renameEntity"
		qvtInput = "${IN_STR}/structure_tab.qvto"
		qvtInput = "${IN_OPS}/renameEntity1.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/renameEntity1_required"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "renameEntity standardClass"
	}

	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/5_removeEntity1"
		qvtInput = "${IN_STR}/structure_tab_plain.qvto"
		qvtInput = "${IN_OPS}/removeEntity1.qvto"
		qvtComparison = "${IN_STR}/structure_int.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "removeEntity standardClass"
	}

	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/5b_removeEntity2"
		qvtInput = "${IN_STR}/structure_int.qvto"
		qvtInput = "${IN_OPS}/removeEntity2.qvto"
		qvtComparison = "${IN_STR}/empty_structure.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "removeEntity PrimitiveClass"
	}
	
	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/6_renameProperty1"
		qvtInput = "${IN_STR}/structure_tab.qvto"
		qvtInput = "${IN_OPS}/renameProperty1.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/renameProperty1_required.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "renameProperty pr -> newPropertyName"
	}

	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/8_removeProperty1"
		qvtInput = "${IN_STR}/structure_tab.qvto"
		qvtInput = "${IN_OPS}/removeProperty1.qvto"
		qvtComparison = "${IN_STR}/structure_tab_plain.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "removeProperty pr"
	}

	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/9_setOpposite1"
		qvtInput = "${IN_STR}/structure_tab_op1.qvto"
		qvtInput = "${IN_OPS}/setOpposite1.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/setOpposite1_required.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "setOpposite pr"
	}
	
	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/10_setAbstract1"
		qvtInput = "${IN_STR}/structure_tab_plain.qvto"
		qvtInput = "${IN_OPS}/setAbstract1.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/setAbstract1_required.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "setAbstract tab"
	}

	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/11_addParent1"
		qvtInput = "${IN_STR}/structure_tab_parent.qvto"
		qvtInput = "${IN_OPS}/addParent1.qvto"
		qvtComparison = "${COMPARISONS_STRUCTURES_DIR}/addParent1_required.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "addParent tab parent"
	}
	
	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/12_RemoveParent1"
		qvtInput = "${COMPARISONS_STRUCTURES_DIR}/addParent1_required.qvto"
		qvtInput = "${IN_OPS}/removeParent1.qvto"
		qvtComparison = "${IN_STR}/structure_tab_parent.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "removeParent tab parent"
	}

	component = TestComponent {
		transformationFile = "${TEST_TRANSFORMATION}"
		outputParentUri = "${OUTPUT_BASE_DIR}/13_zipperHierarchy1"
		qvtInput = "${COMPARISONS_STRUCTURES_DIR}/addParent1_required.qvto"
		qvtInput = "${IN_OPS}/removeParent1.qvto"
		qvtComparison = "${IN_STR}/structure_tab_parent.qvto"
		qvtComparison = "${COMPARE_ERRORS_DIR}/empty_errors.qvto"
		testDescription = "removeParent tab parent"
	}

}